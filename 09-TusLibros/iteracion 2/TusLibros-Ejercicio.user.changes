

----QUIT----(30 May 2023 00:05:32) CuisUniversity-5832.image priorSource: 4928100!

----STARTUP---- (30 May 2023 00:05:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5832.image!


----QUIT----(30 May 2023 00:05:33) CuisUniversity-5832.image priorSource: 9366537!

----STARTUP---- (30 May 2023 17:31:15) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!


----End fileIn of C:\Users\nacho\Documents\GitHub\inge1-2023\07-Portfolio2\Portfolio2-Ejercicio.st----!

----SNAPSHOT----(30 May 2023 17:36:14) CuisUniversity-5832.image priorSource: 9366758!

----SNAPSHOT----(30 May 2023 17:41:20) CuisUniversity-5832.image priorSource: 9403323!

----STARTUP---- (1 June 2023 17:16:40) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!


----End fileIn of C:\Users\nacho\Documents\GitHub\inge1-2023\07-Portfolio2\Portfolio2-Ejercicio.st----!

!classRemoval: #Withdraw stamp: 'IV 6/1/2023 17:17:21'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Transference stamp: 'IV 6/1/2023 17:17:21'!
AccountTransaction subclass: #Transference
	instanceVariableNames: 'withdrawAccount depositAccount value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Deposit stamp: 'IV 6/1/2023 17:17:21'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'IV 6/1/2023 17:17:22'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #AccountSummary stamp: 'IV 6/1/2023 17:17:22'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #ReceptiveAccount stamp: 'IV 6/1/2023 17:17:22'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Portfolio stamp: 'IV 6/1/2023 17:17:22'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Account stamp: 'IV 6/1/2023 17:17:22'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #TransferenceTest stamp: 'IV 6/1/2023 17:17:22'!
TestCase subclass: #TransferenceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'IV 6/1/2023 17:17:22'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'IV 6/1/2023 17:17:22'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #AccountSummaryTest stamp: 'IV 6/1/2023 17:17:23'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

----End fileIn of C:\Users\nacho\Documents\GitHub\inge1-2023\07-Portfolio2\Portfolio2-Ejercicio.st----!

----STARTUP---- (3 June 2023 18:10:29) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!


!classRemoval: #Withdraw stamp: 'IV 6/3/2023 18:10:37'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Transference stamp: 'IV 6/3/2023 18:10:37'!
AccountTransaction subclass: #Transference
	instanceVariableNames: 'withdrawAccount depositAccount value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Deposit stamp: 'IV 6/3/2023 18:10:38'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'IV 6/3/2023 18:10:38'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #AccountSummary stamp: 'IV 6/3/2023 18:10:38'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #ReceptiveAccount stamp: 'IV 6/3/2023 18:10:38'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions transferences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Portfolio stamp: 'IV 6/3/2023 18:10:38'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #Account stamp: 'IV 6/3/2023 18:10:39'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #TransferenceTest stamp: 'IV 6/3/2023 18:10:39'!
TestCase subclass: #TransferenceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'IV 6/3/2023 18:10:39'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'IV 6/3/2023 18:10:39'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

!classRemoval: #AccountSummaryTest stamp: 'IV 6/3/2023 18:10:39'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2-Ejercicio'!

----End fileIn of C:\Users\nacho\Documents\GitHub\inge1-2023\08-MarsRover-ElRegreso\MarsRover-WithHeading.st----!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:13:44'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 18:13:44'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:13:44'!
ERROR!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:14:08' prior: 50628842!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: '' equals: window currentPosition.! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/3/2023 18:31:44'!
newSuscriber: anObserver

	observers add: anObserver! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:31:44' prior: 50629350!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover newSuscriber: self.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:31:44' prior: 50629291!
initializeFor: aMarsRover

	lines := OrderedCollection new.
	marsRover := aMarsRover.
	
	marsRover newSuscriber: self.! !

!methodRemoval: MarsRover #subscribe: stamp: 'IV 6/3/2023 18:31:44'!
subscribe: anObserver

	observers add: anObserver!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 18:31:48'!
PASSED!

!classDefinition: #MarsRoverObserver category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:39:06'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:39:06'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'marsRover currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:39:20'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----SNAPSHOT----(3 June 2023 18:39:30) CuisUniversity-5832.image priorSource: 9403411!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:40:07'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:40:07'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserver category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:40:07'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/3/2023 18:40:35'!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover newSuscriber: self.! !

!methodRemoval: MarsRoverWindow #initializeFor: stamp: 'IV 6/3/2023 18:40:35'!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover newSuscriber: self.!
!MarsRoverObserver class methodsFor: 'instance creation' stamp: 'IV 6/3/2023 18:41:10'!
for: aMarsRover
	^self new initializeFor: aMarsRover ! !

!methodRemoval: MarsRoverWindow class #for: stamp: 'IV 6/3/2023 18:41:10'!
for: aMarsRover
	^self new initializeFor: aMarsRover !

!methodRemoval: MarsRoverLogger class #for: stamp: 'IV 6/3/2023 18:41:10'!
for: aMarsRover 
	^self new initializeFor: aMarsRover!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/3/2023 18:41:57' overrides: 16920235!
initialize
	lines := OrderedCollection new.! !

!methodRemoval: MarsRoverLogger #initializeFor: stamp: 'IV 6/3/2023 18:42:02'!
initializeFor: aMarsRover

	lines := OrderedCollection new.
	marsRover := aMarsRover.
	
	marsRover newSuscriber: self.!
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:44:07'!
notifyMovedTo: aPosition

	! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:44:11' prior: 50629632!
notifyMovedTo: aPosition

	self subclassResponsibility ! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:44:12' prior: 50629636!
notifyMovedTo: aPosition

	self subclassResponsibility! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:44:30'!
notifyNowHeadingNorth

	self subclassResponsibility! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:44:34'!
notifyNowHeadingSouth

	self subclassResponsibility! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:44:36'!
notifyNowHeadingEast

	self subclassResponsibility! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:44:39'!
notifyNowHeadingWest

	self subclassResponsibility! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:45:04' overrides: 50629641!
notifyMovedTo: aPosition

	currentPosition := aPosition.! !

!methodRemoval: MarsRoverWindow #movedTo: stamp: 'IV 6/3/2023 18:45:04'!
movedTo: aPosition

	currentPosition := aPosition.!
!MarsRoverLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 18:45:28' overrides: 50629661!
notifyNowHeadingWest

	lines add: 'West'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:45:28' overrides: 50629661!
notifyNowHeadingWest
	currentHeading := 'Apuntando al Oeste'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:45:28' prior: 50628947!
notifyHeadingWest

	observers do: [:anObserver | anObserver notifyNowHeadingWest].! !

!methodRemoval: MarsRoverLogger #headingWest stamp: 'IV 6/3/2023 18:45:28'!
headingWest

	lines add: 'West'.!

!methodRemoval: MarsRoverWindow #headingWest stamp: 'IV 6/3/2023 18:45:28'!
headingWest
	currentHeading := 'Apuntando al Oeste'!
!MarsRoverLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 18:45:37' overrides: 50629651!
notifyNowHeadingSouth

	lines add: 'South'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:45:37' overrides: 50629651!
notifyNowHeadingSouth
	currentHeading := 'Apuntando al Sur'.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:45:37' prior: 50628942!
notifyHeadingSouth

	observers do: [:anObserver | anObserver notifyNowHeadingSouth].! !

!methodRemoval: MarsRoverLogger #headingSouth stamp: 'IV 6/3/2023 18:45:37'!
headingSouth

	lines add: 'South'.!

!methodRemoval: MarsRoverWindow #headingSouth stamp: 'IV 6/3/2023 18:45:37'!
headingSouth
	currentHeading := 'Apuntando al Sur'.!
!MarsRoverLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 18:45:46' overrides: 50629646!
notifyNowHeadingNorth

	lines add: 'North'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:45:46' overrides: 50629646!
notifyNowHeadingNorth
	currentHeading := 'Apuntando al Norte'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:45:46' prior: 50628937!
notifyHeadingNorth

	observers do: [:anObserver | anObserver notifyNowHeadingNorth].! !

!methodRemoval: MarsRoverLogger #headingNorth stamp: 'IV 6/3/2023 18:45:46'!
headingNorth

	lines add: 'North'.!

!methodRemoval: MarsRoverWindow #headingNorth stamp: 'IV 6/3/2023 18:45:46'!
headingNorth
	currentHeading := 'Apuntando al Norte'!
!MarsRoverLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 18:45:54' overrides: 50629656!
notifyNowHeadingEast

	lines add: 'East'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:45:54' overrides: 50629656!
notifyNowHeadingEast
	currentHeading := 'Apuntando al Este'.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:45:55' prior: 50628932!
notifyHeadingEast

	observers do: [:anObserver | anObserver notifyNowHeadingEast].! !

!methodRemoval: MarsRoverLogger #headingEast stamp: 'IV 6/3/2023 18:45:55'!
headingEast

	lines add: 'East'.!

!methodRemoval: MarsRoverWindow #headingEast stamp: 'IV 6/3/2023 18:45:55'!
headingEast
	currentHeading := 'Apuntando al Este'.!
!MarsRoverLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 18:46:19' overrides: 50629641!
notifyMovedTo: aPosition

	lines add: '(' , aPosition x asString , ',' , aPosition y asString , ')'! !

!methodRemoval: MarsRoverLogger #movedTo: stamp: 'IV 6/3/2023 18:46:19'!
movedTo: aPosition

	lines add: '(' , aPosition x asString , ',' , aPosition y asString , ')'!

----SNAPSHOT----(3 June 2023 18:46:26) CuisUniversity-5832.image priorSource: 9533372!
!MarsRoverLogger methodsFor: 'lines' stamp: 'IV 6/3/2023 18:46:58' overrides: 16902254!
value

	^ lines! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:46:58' prior: 50628807!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := MarsRover at: 0@0 heading: self north.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:46:58' prior: 50628796!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := MarsRover at: 0@0 heading: self north.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:46:58' prior: 50628785!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := MarsRover at: 0@0 heading: self north.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:46:58' prior: 50628775!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := MarsRover at: 0@0 heading: self north.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:46:58' prior: 50628829!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := MarsRover at: 0@0 heading: self north.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 18:46:58' prior: 50628818!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := MarsRover at: 0@0 heading: self north.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !

!methodRemoval: MarsRoverLogger #lines stamp: 'IV 6/3/2023 18:46:58'!
lines

	^ lines!
!MarsRoverObserver methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:47:23' overrides: 16902254!
value

	self subclassResponsibility ! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:47:46' overrides: 50629865!
value

	! !
!MarsRoverWindow methodsFor: 'status' stamp: 'IV 6/3/2023 18:47:59' prior: 50629355!
currentHeading
	^self value! !
!MarsRoverWindow methodsFor: 'status' stamp: 'IV 6/3/2023 18:48:09' prior: 50629359!
currentPosition
	^self value! !

----SNAPSHOT----(3 June 2023 18:48:21) CuisUniversity-5832.image priorSource: 9540207!

!methodRemoval: MarsRoverWindow #currentHeading stamp: 'IV 6/3/2023 18:48:37'!
currentHeading
	^self value!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:48:37' prior: 50628896!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: '(1,0)' equals: window currentPosition.
	self assert: 'Apuntando al Norte' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:48:37' prior: 50628874!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Apuntando al Este' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:48:37' prior: 50628885!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Apuntando al Oeste' equals: (window value).! !

!methodRemoval: MarsRoverWindow #currentPosition stamp: 'IV 6/3/2023 18:48:48'!
currentPosition
	^self value!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:48:48' prior: 50628852!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: '(0,1)' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:48:48' prior: 50629888!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: '(1,0)' equals: (window value).
	self assert: 'Apuntando al Norte' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:48:48' prior: 50629459!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: '' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:48:48' prior: 50628863!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: '(0,-1)' equals: (window value).! !

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:49:16'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:49:16'!
ERROR!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:49:16'!
ERROR!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 18:49:16'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 18:49:16'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 18:49:16'!
ERROR!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:49:16'!
FAILURE!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 18:49:16'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 18:49:16'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:49:16'!
FAILURE!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:49:16'!
FAILURE!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 18:49:16'!
ERROR!
!MarsRover methodsFor: 'observers' stamp: 'IV 6/3/2023 18:49:49' prior: 50628952!
notifyPosition: aPosition

	observers do: [:anObserver | anObserver notifyMovedTo: aPosition].! !

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:49:54'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:49:54'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:49:54'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 18:49:54'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 18:49:54'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 18:49:54'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:49:54'!
FAILURE!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 18:49:54'!
FAILURE!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 18:49:54'!
FAILURE!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:49:54'!
FAILURE!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:49:54'!
FAILURE!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 18:49:54'!
FAILURE!
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:50:11' prior: 50629870 overrides: 50629865!
value

	^' '! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:50:12' prior: 50630078 overrides: 50629865!
value

	^''! !

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:50:14'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:50:14'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:50:14'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 18:50:14'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 18:50:14'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 18:50:14'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:50:14'!
PASSED!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 18:50:14'!
FAILURE!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 18:50:14'!
FAILURE!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:50:14'!
FAILURE!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:50:14'!
FAILURE!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 18:50:14'!
FAILURE!

MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentStatus'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:50:47'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentStatus'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #NameOfSubclass
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #NameOfSubclass category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:51:30'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #NameOfSubclass stamp: 'IV 6/3/2023 18:51:35'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 18:51:48'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:52:00' prior: 50629752 overrides: 50629656!
notifyNowHeadingEast
	currentHeading := 'Este'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:52:05' prior: 50629728 overrides: 50629646!
notifyNowHeadingNorth
	currentHeading := 'Norte'! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:52:09' prior: 50629704 overrides: 50629651!
notifyNowHeadingSouth
	currentHeading := 'Sur'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 18:52:13' prior: 50629680 overrides: 50629661!
notifyNowHeadingWest
	currentHeading := 'Oeste'! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:52:53' prior: 50630082 overrides: 50629865!
value

	^'Position: ', currentPosition asString, 'Heading: ', currentHeading asString.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 18:53:18' prior: 50629954!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: , Heading: ' equals: (window value).! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:53:27' prior: 50630207 overrides: 50629865!
value

	^'Position: ', currentPosition asString, ', Heading: ', currentHeading asString.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:56:24' prior: 50630225 overrides: 50629865!
value

	^self positionStatus, ', ', self headingStatus.! !

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:56:29'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:56:29'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:56:29'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 18:56:29'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 18:56:29'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 18:56:29'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:56:29'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 18:56:29'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 18:56:29'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:56:29'!
ERROR!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:56:29'!
ERROR!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 18:56:29'!
ERROR!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:56:31'!
ERROR!
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:56:46'!
positionStatus
	self shouldBeImplemented.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:58:09' prior: 50630288!
positionStatus

	currentPosition ifNil: ['No information'] ifNotNil: [ | positionString |positionString := currentPosition asString ]
	
	
	^'Position: ', currentPosition asString! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:58:32' prior: 50630293!
positionStatus

	| positionString |

	currentPosition ifNil: [positionString := 'No information'] ifNotNil: [ positionString := currentPosition asString ]
	
	
	^'Position: ', currentPosition asString! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:58:39' prior: 50630302!
positionStatus

	| positionString |

	currentPosition ifNil: [positionString := 'No information'] ifNotNil: [ positionString := currentPosition asString ]
	
	
	^'Position: ', positionString ! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:58:41' prior: 50630312!
positionStatus

	| positionString |

	currentPosition ifNil: [positionString := 'No information'] ifNotNil: [ positionString := currentPosition asString ]
	
	
	^'Position: ', positionString.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:58:43' prior: 50630321!
positionStatus

	| positionString |

	currentPosition ifNil: [positionString := 'No information'] ifNotNil: [ positionString := currentPosition asString ]
	
	
	^'Position: ', positionString.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:58:44' prior: 50630330!
positionStatus

	| positionString |

	currentPosition ifNil: [positionString := 'No information'] ifNotNil: [ positionString := currentPosition asString ]
	
	^'Position: ', positionString.! !

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:58:56'!
ERROR!
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:59:07' prior: 50630339!
positionStatus

	| positionString |

	currentPosition ifNil: [positionString := 'No information'] ifNotNil: [ positionString := currentPosition asString ].
	
	^'Position: ', positionString.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:59:37'!
headingStatus

	| headingString |

	currentPosition ifNil: [headingString := 'No information'] ifNotNil: [ headingString := currentPosition asString ].
	
	^'Heading: ', headingString .! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:59:43' prior: 50630361!
headingStatus

	| headingString |

	currentHeading ifNil: [headingString := 'No information'] ifNotNil: [ headingString := currentPosition asString ].
	
	^'Heading: ', headingString .! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/3/2023 18:59:48' prior: 50630370!
headingStatus

	| headingString |

	currentHeading ifNil: [headingString := 'No information'] ifNotNil: [ headingString := currentHeading asString ].
	
	^'Heading: ', headingString .! !

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:59:52'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:59:52'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 18:59:52'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 18:59:52'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 18:59:52'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 18:59:52'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 18:59:52'!
FAILURE!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 18:59:52'!
FAILURE!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 18:59:52'!
FAILURE!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:59:52'!
FAILURE!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 18:59:52'!
FAILURE!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 18:59:52'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:00:11' prior: 50630213!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:00:14'!
PASSED!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:00:17'!
FAILURE!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:00:17'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:00:34' prior: 50629929!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:00:40' prior: 50630460!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:00:43'!
PASSED!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:00:43'!
FAILURE!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:00:43'!
FAILURE!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:00:43'!
FAILURE!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:00:43'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:01:00' prior: 50629965!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@-1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:01:01' prior: 50630535!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:01:02' prior: 50630547!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@-1, Heading: No information' equals: (window value).! !

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:01:02'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:01:12' prior: 50630559!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:01:13'!
PASSED!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:01:13'!
FAILURE!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:01:13'!
FAILURE!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:01:13'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:01:33' prior: 50629902!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:01:35'!
FAILURE!
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:01:54' prior: 50630184 overrides: 50629656!
notifyNowHeadingEast
	currentHeading := 'East'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:01:58' prior: 50630190 overrides: 50629646!
notifyNowHeadingNorth
	currentHeading := 'North'! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:02:01' prior: 50630196 overrides: 50629651!
notifyNowHeadingSouth
	currentHeading := 'South'.! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:02:06' prior: 50630202 overrides: 50629661!
notifyNowHeadingWest
	currentHeading := 'West'! !

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:02:34'!
PASSED!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:02:34'!
FAILURE!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:02:34'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:02:45' prior: 50629914!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:02:58' prior: 50629940!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.


	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:02:59' prior: 50630742!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := MarsRover at: 0@0 heading: self north.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:03:00'!
PASSED!

MarsRoverLogger subclass: #MarsRoverPositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverPositionLogger category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:04:23'!
MarsRoverLogger subclass: #MarsRoverPositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLogger subclass: #MarsRoverHeadingLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverHeadingLogger category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:04:28'!
MarsRoverLogger subclass: #MarsRoverHeadingLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLogger subclass: #MarsRoverCompleteLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverCompleteLogger category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:04:32'!
MarsRoverLogger subclass: #MarsRoverCompleteLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverPositionLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 19:05:08' overrides: 50629771!
notifyMovedTo: aPosition

	lines add: '(' , aPosition x asString , ',' , aPosition y asString , ')'! !
!MarsRoverHeadingLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 19:05:08' overrides: 50629771!
notifyMovedTo: aPosition

	lines add: '(' , aPosition x asString , ',' , aPosition y asString , ')'! !
!MarsRoverCompleteLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 19:05:08' overrides: 50629771!
notifyMovedTo: aPosition

	lines add: '(' , aPosition x asString , ',' , aPosition y asString , ')'! !

!methodRemoval: MarsRoverLogger #notifyMovedTo: stamp: 'IV 6/3/2023 19:05:08'!
notifyMovedTo: aPosition

	lines add: '(' , aPosition x asString , ',' , aPosition y asString , ')'!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:05:08' overrides: 50629641!
notifyMovedTo: aPosition

	self subclassResponsibility! !
!MarsRoverHeadingLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 19:05:21' prior: 50630868 overrides: 50630888!
notifyMovedTo: aPosition

	! !
!MarsRoverHeadingLogger methodsFor: 'observations' stamp: 'IV 6/3/2023 19:05:22' prior: 50630894 overrides: 50630888!
notifyMovedTo: aPosition! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:14' overrides: 50629747!
notifyNowHeadingEast

	lines add: 'East'.! !
!MarsRoverHeadingLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:14' overrides: 50629747!
notifyNowHeadingEast

	lines add: 'East'.! !
!MarsRoverCompleteLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:14' overrides: 50629747!
notifyNowHeadingEast

	lines add: 'East'.! !

!methodRemoval: MarsRoverLogger #notifyNowHeadingEast stamp: 'IV 6/3/2023 19:06:14'!
notifyNowHeadingEast

	lines add: 'East'.!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:06:14' overrides: 50629656!
notifyNowHeadingEast

	self subclassResponsibility! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:19' overrides: 50629723!
notifyNowHeadingNorth

	lines add: 'North'.! !
!MarsRoverHeadingLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:19' overrides: 50629723!
notifyNowHeadingNorth

	lines add: 'North'.! !
!MarsRoverCompleteLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:20' overrides: 50629723!
notifyNowHeadingNorth

	lines add: 'North'.! !

!methodRemoval: MarsRoverLogger #notifyNowHeadingNorth stamp: 'IV 6/3/2023 19:06:20'!
notifyNowHeadingNorth

	lines add: 'North'.!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:06:20' overrides: 50629646!
notifyNowHeadingNorth

	self subclassResponsibility! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:25' overrides: 50629699!
notifyNowHeadingSouth

	lines add: 'South'.! !
!MarsRoverHeadingLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:25' overrides: 50629699!
notifyNowHeadingSouth

	lines add: 'South'.! !
!MarsRoverCompleteLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:25' overrides: 50629699!
notifyNowHeadingSouth

	lines add: 'South'.! !

!methodRemoval: MarsRoverLogger #notifyNowHeadingSouth stamp: 'IV 6/3/2023 19:06:25'!
notifyNowHeadingSouth

	lines add: 'South'.!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:06:25' overrides: 50629651!
notifyNowHeadingSouth

	self subclassResponsibility! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:33' overrides: 50629675!
notifyNowHeadingWest

	lines add: 'West'.! !
!MarsRoverHeadingLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:34' overrides: 50629675!
notifyNowHeadingWest

	lines add: 'West'.! !
!MarsRoverCompleteLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:06:34' overrides: 50629675!
notifyNowHeadingWest

	lines add: 'West'.! !

!methodRemoval: MarsRoverLogger #notifyNowHeadingWest stamp: 'IV 6/3/2023 19:06:34'!
notifyNowHeadingWest

	lines add: 'West'.!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:06:34' overrides: 50629661!
notifyNowHeadingWest

	self subclassResponsibility! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:07:15' prior: 50630976 overrides: 50630995!
notifyNowHeadingWest
! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:07:19' prior: 50630952 overrides: 50630971!
notifyNowHeadingSouth
! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:07:22' prior: 50630928 overrides: 50630947!
notifyNowHeadingNorth
! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:07:25' prior: 50630904 overrides: 50630923!
notifyNowHeadingEast

! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:07:25' prior: 50631016 overrides: 50630923!
notifyNowHeadingEast
! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:31'!
marsRover

	^ MarsRover at: 0@0 heading: self north! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:31' prior: 50629789!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := self marsRover.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50629825!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self marsRover.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50629836!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := self marsRover.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50630471!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self marsRover.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50630639!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self marsRover.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50629850!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := self marsRover.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50629801!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self marsRover.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50630755!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self marsRover.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50630730!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self marsRover.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50630436!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self marsRover.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50629813!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self marsRover.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:10:32' prior: 50630575!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self marsRover.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:12:16'!
marsRoverWithCompleteLogger

	^ MarsRover at: 0@0 heading: self north! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631063!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self marsRoverWithCompleteLogger.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631142!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self marsRoverWithCompleteLogger.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631029!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := self marsRoverWithCompleteLogger.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631153!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self marsRoverWithCompleteLogger.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631131!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self marsRoverWithCompleteLogger.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631108!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self marsRoverWithCompleteLogger.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631074!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self marsRoverWithCompleteLogger.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631050!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := self marsRoverWithCompleteLogger.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631086!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := self marsRoverWithCompleteLogger.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631040!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self marsRoverWithCompleteLogger.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631097!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self marsRoverWithCompleteLogger.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:12:16' prior: 50631120!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self marsRoverWithCompleteLogger.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !

!methodRemoval: ObserversTest #marsRover stamp: 'IV 6/3/2023 19:12:16'!
marsRover

	^ MarsRover at: 0@0 heading: self north!
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:13:39'!
completeLoggerForMarsRoverStarting

	^ MarsRover at: 0@0 heading: self north! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631282!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631218!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631243!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631270!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631305!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631194!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631206!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631170!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631230!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631293!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631182!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:13:39' prior: 50631256!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !

!methodRemoval: ObserversTest #marsRoverWithCompleteLogger stamp: 'IV 6/3/2023 19:13:39'!
marsRoverWithCompleteLogger

	^ MarsRover at: 0@0 heading: self north!
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:13:42' prior: 50631321!
completeLoggerForMarsRoverStarting

	

	^ MarsRover at: 0@0 heading: self north! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:14:25' prior: 50631483!
completeLoggerForMarsRoverStarting

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:14:28' prior: 50631489!
completeLoggerForMarsRoverStarting

	| marsRover |

	marsRover := MarsRover at: 0@0 heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:14:29' prior: 50631497!
completeLoggerForMarsRoverStarting
	| marsRover |

	marsRover := MarsRover at: 0@0 heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:14:32' prior: 50631505!
completeLoggerForMarsRoverStarting

	| marsRover |

	marsRover := MarsRover at: 0@0 heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.! !

0@0!
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:15:08'!
completeLoggerForMarsRoverStarting: aPosition

	| marsRover |

	marsRover := MarsRover at: 0@0 heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631440!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631464!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631338!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631452!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631389!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631327!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631414!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631376!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631364!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631401!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631427!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631351!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStarting: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!methodRemoval: ObserversTest #completeLoggerForMarsRoverStarting stamp: 'IV 6/3/2023 19:15:08'!
completeLoggerForMarsRoverStarting

	| marsRover |

	marsRover := MarsRover at: 0@0 heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.!
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:08' prior: 50631521!
completeLoggerForMarsRoverStarting: aPosition

	| marsRover |

	marsRover := MarsRover at: aPosition heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:15:17'!
completeLoggerForMarsRoverStartingAt: aPosition

	| marsRover |

	marsRover := MarsRover at: aPosition heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631642!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631630!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631668!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631556!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631530!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631569!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631604!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631617!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631655!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631593!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631542!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:15:17' prior: 50631581!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !

!methodRemoval: ObserversTest #completeLoggerForMarsRoverStarting: stamp: 'IV 6/3/2023 19:15:17'!
completeLoggerForMarsRoverStarting: aPosition

	| marsRover |

	marsRover := MarsRover at: aPosition heading: self north.

	^ MarsRoverCompleteLogger for: marsRover.!
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:16:46' prior: 50631697!
completeLoggerForMarsRoverStartingAt: aPosition

	| marsRover |

	marsRover := MarsRover at: aPosition heading: MarsRoverHeadingNorth.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:17:21'!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection 

	| marsRover |

	marsRover := MarsRover at: aPosition heading: MarsRoverHeadingNorth.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631820!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631831!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631719!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631846!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631706!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631781!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631744!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631794!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631769!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631807!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631757!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631731!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!methodRemoval: ObserversTest #completeLoggerForMarsRoverStartingAt: stamp: 'IV 6/3/2023 19:17:21'!
completeLoggerForMarsRoverStartingAt: aPosition

	| marsRover |

	marsRover := MarsRover at: aPosition heading: MarsRoverHeadingNorth.

	^ MarsRoverCompleteLogger for: marsRover.!
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:17:21' prior: 50631875!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection 

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:18:03' prior: 50632057!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection 

	| marsRover aCommandsString |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: aCommandsString.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:18:25' prior: 50632067!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection 

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: ''.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:18:40'!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: ''.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50632034!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631980!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631938!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631912!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'l'.
	
	self assertArray: { 'West' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631952!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631897!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631885!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631994!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631966!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50631925!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50632007!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50632021!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	logger := MarsRoverLogger for: marsRover.
	
	marsRover process: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !

!methodRemoval: ObserversTest #completeLoggerForMarsRoverStartingAt:heading: stamp: 'IV 6/3/2023 19:18:40'!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection 

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: ''.

	^ MarsRoverCompleteLogger for: marsRover.!
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:18:40' prior: 50632088!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: aCommandsString.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:20:25'!
marsRoverAt: aPosition heading: aHeadingDirection

	^ MarsRover at: aPosition heading: aHeadingDirection! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:20:25' prior: 50632280!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	
	marsRover process: aCommandsString.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:20:36' prior: 50632298!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:20:53' prior: 50632291!
marsRoverAt: aPosition heading: aHeadingDirection

	| marsRover |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: ''.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:10'!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 

	| marsRover |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: ''.! !
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:21:10' prior: 50632310!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection processing: ''.
	

	^ MarsRoverCompleteLogger for: marsRover.! !

!methodRemoval: ObserversTest #marsRoverAt:heading: stamp: 'IV 6/3/2023 19:21:10'!
marsRoverAt: aPosition heading: aHeadingDirection

	| marsRover |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: ''.!
!ObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:21:10' prior: 50632329!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 

	| marsRover |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: aCommandsString.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:17' prior: 50632338!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection processing: ''.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:27' prior: 50632367!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:36' prior: 50632357!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 

	| marsRover |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: aCommandsString.
	
	^ marsRover! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:36' prior: 50632390!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 

	| marsRover |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: aCommandsString.
	
	^ marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:40' prior: 50632400!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	marsRover process: aCommandsString.
	
	^ marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:42' prior: 50632410!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	marsRover process: aCommandsString.
	
	^ marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:21:53' prior: 50632420!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	marsRover process: aCommandsString.
	
	^ marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:22:25' prior: 50632378!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  


	^ MarsRoverCompleteLogger for: (self marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString).! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:22:28' prior: 50632440!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	^ MarsRoverCompleteLogger for: (self marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString).! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:23:02' prior: 50632186!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.

	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:23:02' prior: 50632460!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	
	logger := MarsRoverLogger for: marsRover.
	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:23:15' prior: 50632471!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover logger |
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	

	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:23:17' prior: 50632482!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| logger |
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.

	
	self assert: logger value isEmpty.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:23:22' prior: 50632492!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.

	self assert: logger value isEmpty.! !

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:23:25'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:23:25'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:23:25'!
ERROR!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:23:25'!
ERROR!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:23:53' prior: 50632199!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'f'.

	self assertArray: { '(0,1)' } equalsCollection: logger value.! !

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:23:58'!
FAILURE!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:23:58'!
FAILURE!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:24:04'!
FAILURE!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:24:04'!
FAILURE!
!MarsRoverCompleteLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:24:50' prior: 50630875 overrides: 50630888!
notifyMovedTo: aPosition

	lines add: aPosition asString! !

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:24:52'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:24:52'!
FAILURE!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:24:52'!
ERROR!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:24:55'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:25:57' prior: 50632563!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'f'.

	self assertArray: { '0@1' } equalsCollection: logger value.! !

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:26:08'!
FAILURE!
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:27:36' prior: 50632450!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	^ MarsRoverCompleteLogger for: (self marsRoverAt: aPosition heading: aHeadingDirection).! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:27:44'!
marsRoverAt: aPosition heading: aHeadingDirection
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.

	
	^ marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:27:44' prior: 50632670!
marsRoverAt: aPosition heading: aHeadingDirection
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	^ marsRover.! !

!methodRemoval: ObserversTest #marsRoverAt:heading:processing: stamp: 'IV 6/3/2023 19:27:46'!
marsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString 
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	marsRover process: aCommandsString.
	
	^ marsRover.!
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:28:26' prior: 50632661!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |
	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	marsRover process: aCommandsString.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:28:30' prior: 50632696!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	marsRover process: aCommandsString.

	^ MarsRoverCompleteLogger for: marsRover.! !
!ObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:28:53' prior: 50632708!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	logger := MarsRoverCompleteLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger! !

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:28:58'!
PASSED!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:29:20' prior: 50632646!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 
					heading: MarsRoverHeadingNorth 
					processing: 'f'.

	self assertArray: { '0@1' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:29:27' prior: 50632736!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 
					heading: MarsRoverHeadingNorth 
					processing: 'f'.

	self assertArray: { '0@1' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:31:04' prior: 50632256!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'b'.

	self assertArray: { '(0,-1)' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:31:13' prior: 50632758!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'b'.

	self assertArray: { '0@ -1' } equalsCollection: logger value.! !

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:31:14'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:31:14'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:31:14'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:31:14'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:31:14'!
ERROR!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:31:14'!
ERROR!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:31:26' prior: 50632227!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| marsRover logger |
	marsRover := 
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'r'.
	
	marsRover process: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:31:30' prior: 50632831!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'r'.


	self assertArray: { 'East' } equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:31:33' prior: 50632843!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:34'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:31:35'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:31:35'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:31:35'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:35'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:35'!
ERROR!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:31:35'!
ERROR!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:31:35'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:31:35'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:31:35'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:31:35'!
ERROR!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:31:35'!
ERROR!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:31:35'!
ERROR!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:31:51' prior: 50632142!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'l'.
		
	self assertArray: { 'West' } equalsCollection: logger value.! !

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:52'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:31:52'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:31:52'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:31:52'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:52'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:31:52'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:31:52'!
ERROR!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:31:52'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:31:52'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:31:53'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:31:53'!
ERROR!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:31:53'!
ERROR!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:31:53'!
ERROR!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:32:16' prior: 50632170!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| logger |
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.

	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:32:19' prior: 50632978!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.

	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:32:20' prior: 50632991!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'(0,1)'.
		'East'.
		'(1,1)'.
		'North'.
		'(1,0)' }
		equalsCollection: logger value.! !

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:32:26'!
FAILURE!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:32:43' prior: 50633004!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'0@1'.
		'East'.
		'1@1'.
		'North'.
		'1@0' }
		equalsCollection: logger value.! !

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:32:48'!
PASSED!

!testRun: #ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:32:48'!
PASSED!

!testRun: #ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:32:48'!
PASSED!

!testRun: #ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:32:48'!
PASSED!

!testRun: #ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:32:48'!
PASSED!

!testRun: #ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:32:48'!
PASSED!

!testRun: #ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:32:48'!
PASSED!

!testRun: #ObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:32:48'!
ERROR!

!testRun: #ObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:32:48'!
ERROR!

!testRun: #ObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:32:48'!
ERROR!

!testRun: #ObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:32:48'!
ERROR!

!testRun: #ObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:32:48'!
ERROR!

!testRun: #ObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:32:48'!
ERROR!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:34:54'!
test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.

	self assert: logger value isEmpty.! !

!methodRemoval: ObserversTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:34:54'!
test01LogForRoverThatHasntProcessedCommandsIsEmpty

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.

	self assert: logger value isEmpty.!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:34:59'!
test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 
					heading: MarsRoverHeadingNorth 
					processing: 'f'.

	self assertArray: { '0@1' } equalsCollection: logger value.! !

!methodRemoval: ObserversTest #test02LogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:34:59'!
test02LogForRoverThatMovesForwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 
					heading: MarsRoverHeadingNorth 
					processing: 'f'.

	self assertArray: { '0@1' } equalsCollection: logger value.!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:35:11'!
test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'b'.

	self assertArray: { '0@ -1' } equalsCollection: logger value.! !

!methodRemoval: ObserversTest #test03LogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:35:11'!
test03LogForRoverThatMovesBackwardHasLineWithNewPosition

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'b'.

	self assertArray: { '0@ -1' } equalsCollection: logger value.!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:35:22'!
test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.! !

!methodRemoval: ObserversTest #test04LogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:35:22'!
test04LogForRoverThatRotatesRightHasLineWithNewHeading

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'r'.

	self assertArray: { 'East' } equalsCollection: logger value.!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:35:37'!
test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'l'.
		
	self assertArray: { 'West' } equalsCollection: logger value.! !

!methodRemoval: ObserversTest #test05LogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:35:37'!
test05LogForRoverThatRotatesLeftHasLineWithNewHeading

	| logger |

	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'l'.
		
	self assertArray: { 'West' } equalsCollection: logger value.!
!ObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:35:42'!
test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'0@1'.
		'East'.
		'1@1'.
		'North'.
		'1@0' }
		equalsCollection: logger value.! !

!methodRemoval: ObserversTest #test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:35:42'!
test06LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'0@1'.
		'East'.
		'1@1'.
		'North'.
		'1@0' }
		equalsCollection: logger value.!

!classRenamed: #ObserversTest as: #MarsRoverLoggersTest stamp: 'IV 6/3/2023 19:36:30'!
Smalltalk renameClassNamed: #ObserversTest as: #MarsRoverLoggersTest!

!classDefinition: #MarsRoverObserversTest category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:37:02'!
TestCase subclass: #MarsRoverObserversTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLoggersTest category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:37:03'!
MarsRoverObserversTest subclass: #MarsRoverLoggersTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:37:09'!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverLoggersTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:37:09'!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).!
!MarsRoverObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:37:13'!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverLoggersTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:37:13'!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).!
!MarsRoverObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:37:15'!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverLoggersTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:37:15'!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).!
!MarsRoverObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:37:19'!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!methodRemoval: MarsRoverLoggersTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:37:19'!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).!
!MarsRoverObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:37:22'!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !

!methodRemoval: MarsRoverLoggersTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:37:22'!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).!
!MarsRoverObserversTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:37:24'!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !

!methodRemoval: MarsRoverLoggersTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:37:24'!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).!
!MarsRoverObserversTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:37:35'!
east

	^ MarsRoverHeadingEast! !

!methodRemoval: MarsRoverLoggersTest #east stamp: 'IV 6/3/2023 19:37:35'!
east

	^ MarsRoverHeadingEast!
!MarsRoverObserversTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:37:38'!
north

	^ MarsRoverHeadingNorth ! !

!methodRemoval: MarsRoverLoggersTest #north stamp: 'IV 6/3/2023 19:37:38'!
north

	^ MarsRoverHeadingNorth !
!MarsRoverObserversTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:37:41'!
south

	^ MarsRoverHeadingSouth! !

!methodRemoval: MarsRoverLoggersTest #south stamp: 'IV 6/3/2023 19:37:41'!
south

	^ MarsRoverHeadingSouth!
!MarsRoverObserversTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:37:43'!
west

	^ MarsRoverHeadingWest! !

!methodRemoval: MarsRoverLoggersTest #west stamp: 'IV 6/3/2023 19:37:43'!
west

	^ MarsRoverHeadingWest!
!MarsRoverObserversTest methodsFor: 'assertions' stamp: 'IV 6/3/2023 19:37:47'!
assertArray: anArray equalsCollection: aCollection

	self assert: anArray size equals: aCollection size.
	anArray with: aCollection do: [:arrayElement :collectionElement |
		self assert: arrayElement equals: collectionElement
	].! !

!methodRemoval: MarsRoverLoggersTest #assertArray:equalsCollection: stamp: 'IV 6/3/2023 19:37:47'!
assertArray: anArray equalsCollection: aCollection

	self assert: anArray size equals: aCollection size.
	anArray with: aCollection do: [:arrayElement :collectionElement |
		self assert: arrayElement equals: collectionElement
	].!
!MarsRoverObserversTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:37:54'!
marsRoverAt: aPosition heading: aHeadingDirection
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	^ marsRover.! !

!methodRemoval: MarsRoverLoggersTest #marsRoverAt:heading: stamp: 'IV 6/3/2023 19:37:54'!
marsRoverAt: aPosition heading: aHeadingDirection
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	^ marsRover.!

MarsRoverObserversTest subclass: #MarsRoverWindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowTest category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:38:34'!
MarsRoverObserversTest subclass: #MarsRoverWindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLoggersTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:40' overrides: 50633413!
east

	^ MarsRoverHeadingEast! !
!MarsRoverWindowTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:41' overrides: 50633413!
east

	^ MarsRoverHeadingEast! !

!methodRemoval: MarsRoverObserversTest #east stamp: 'IV 6/3/2023 19:38:41'!
east

	^ MarsRoverHeadingEast!
!MarsRoverObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:38:41'!
east

	self subclassResponsibility! !
!MarsRoverLoggersTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:46' overrides: 50633420!
north

	^ MarsRoverHeadingNorth ! !
!MarsRoverWindowTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:46' overrides: 50633420!
north

	^ MarsRoverHeadingNorth ! !

!methodRemoval: MarsRoverObserversTest #north stamp: 'IV 6/3/2023 19:38:46'!
north

	^ MarsRoverHeadingNorth !
!MarsRoverObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:38:46'!
north

	self subclassResponsibility! !
!MarsRoverLoggersTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:50' overrides: 50633427!
south

	^ MarsRoverHeadingSouth! !
!MarsRoverWindowTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:51' overrides: 50633427!
south

	^ MarsRoverHeadingSouth! !

!methodRemoval: MarsRoverObserversTest #south stamp: 'IV 6/3/2023 19:38:51'!
south

	^ MarsRoverHeadingSouth!
!MarsRoverObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:38:51'!
south

	self subclassResponsibility! !
!MarsRoverLoggersTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:53' overrides: 50633434!
west

	^ MarsRoverHeadingWest! !
!MarsRoverWindowTest methodsFor: 'headings' stamp: 'IV 6/3/2023 19:38:53' overrides: 50633434!
west

	^ MarsRoverHeadingWest! !

!methodRemoval: MarsRoverObserversTest #west stamp: 'IV 6/3/2023 19:38:53'!
west

	^ MarsRoverHeadingWest!
!MarsRoverObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:38:53'!
west

	self subclassResponsibility! !
!MarsRoverLoggersTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:39:00' overrides: 50633462!
marsRoverAt: aPosition heading: aHeadingDirection
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	^ marsRover.! !
!MarsRoverWindowTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:39:00' overrides: 50633462!
marsRoverAt: aPosition heading: aHeadingDirection
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	^ marsRover.! !

!methodRemoval: MarsRoverObserversTest #marsRoverAt:heading: stamp: 'IV 6/3/2023 19:39:00'!
marsRoverAt: aPosition heading: aHeadingDirection
	| marsRover |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	
	^ marsRover.!
!MarsRoverObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:39:00'!
marsRoverAt: aPosition heading: aHeadingDirection

	self subclassResponsibility! !
!MarsRoverLoggersTest methodsFor: 'assertions' stamp: 'IV 6/3/2023 19:39:11' overrides: 50633441!
assertArray: anArray equalsCollection: aCollection

	self assert: anArray size equals: aCollection size.
	anArray with: aCollection do: [:arrayElement :collectionElement |
		self assert: arrayElement equals: collectionElement
	].! !
!MarsRoverWindowTest methodsFor: 'assertions' stamp: 'IV 6/3/2023 19:39:11' overrides: 50633441!
assertArray: anArray equalsCollection: aCollection

	self assert: anArray size equals: aCollection size.
	anArray with: aCollection do: [:arrayElement :collectionElement |
		self assert: arrayElement equals: collectionElement
	].! !

!methodRemoval: MarsRoverObserversTest #assertArray:equalsCollection: stamp: 'IV 6/3/2023 19:39:11'!
assertArray: anArray equalsCollection: aCollection

	self assert: anArray size equals: aCollection size.
	anArray with: aCollection do: [:arrayElement :collectionElement |
		self assert: arrayElement equals: collectionElement
	].!
!MarsRoverObserversTest methodsFor: 'as yet unclassified' stamp: 'IV 6/3/2023 19:39:11'!
assertArray: anArray equalsCollection: aCollection

	self subclassResponsibility! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:39:23' overrides: 50633241!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverObserversTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:39:23'!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:39:30' overrides: 50633269!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverObserversTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:39:30'!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:39:35' overrides: 50633297!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverObserversTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:39:35'!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:39:45' overrides: 50633325!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!methodRemoval: MarsRoverObserversTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:39:45'!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:39:49' overrides: 50633354!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !

!methodRemoval: MarsRoverObserversTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:39:49'!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:39:53' overrides: 50633383!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !

!methodRemoval: MarsRoverObserversTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:39:53'!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).!

TestCase subclass: #MarsRoverLoggersTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLoggersTest category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:40:07'!
TestCase subclass: #MarsRoverLoggersTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowTest category: 'MarsRover-WithHeading' stamp: 'IV 6/3/2023 19:40:14'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverObserversTest stamp: 'IV 6/3/2023 19:40:17'!
TestCase subclass: #MarsRoverObserversTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:40:51'!
test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #test07WindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:40:51'!
test07WindowForRoverThatHasntProcessedCommandsIsEmpty

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	marsRover process: ''.

	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:40:57'!
test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #test08WindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/3/2023 19:40:57'!
test08WindowForRoverThatMovesBackwardsShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:41:01'!
test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #test09WindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/3/2023 19:41:01'!
test09WindowForRoverThatMovesForwardShowsCurrentPosition

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:41:05'!
test4CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:41:05'!
test10WindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:41:11'!
test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:41:11'!
test11WindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:41:20'!
test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/3/2023 19:41:20'!
test12WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:41:27'!
test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #test4CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/3/2023 19:41:28'!
test4CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| marsRover window |
	marsRover := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: ''.
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).!
!MarsRoverLoggersTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:41:56'!
test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'0@1'.
		'East'.
		'1@1'.
		'North'.
		'1@0' }
		equalsCollection: logger value.! !
!MarsRoverLoggersTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:42:04' prior: 50634037!
test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions

	| logger |
	
	logger := self completeLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'0@1'.
		'1@1'.
		'1@0' }
		equalsCollection: logger value.! !
!MarsRoverLoggersTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:42:15'!
positionLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	logger := MarsRoverCompleteLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger! !
!MarsRoverLoggersTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:42:19' prior: 50634062!
positionLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	logger := MarsRoverPositionLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger! !
!MarsRoverLoggersTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:42:25'!
headingLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	logger := MarsRoverPositionLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger! !
!MarsRoverLoggersTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/3/2023 19:42:29' prior: 50634087!
headingLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := self marsRoverAt: aPosition heading: aHeadingDirection.
	logger := MarsRoverHeadingLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger! !

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/3/2023 19:42:32'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/3/2023 19:42:32'!
FAILURE!
!MarsRoverLoggersTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:42:42' prior: 50634050!
test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions

	| logger |
	
	logger := self positionLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'0@1'.
		'1@1'.
		'1@0' }
		equalsCollection: logger value.! !

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/3/2023 19:42:45'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/3/2023 19:42:45'!
FAILURE!
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:43:08' prior: 50630861 overrides: 50630888!
notifyMovedTo: aPosition

			'North'.! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:43:21' prior: 50634145 overrides: 50630888!
notifyMovedTo: aPosition! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:43:24' prior: 50634151 overrides: 50630888!
notifyMovedTo: aPosition

! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:43:26' prior: 50634156 overrides: 50630888!
notifyMovedTo: aPosition

	! !

----SNAPSHOT----(3 June 2023 19:43:28) CuisUniversity-5832.image priorSource: 9543391!
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:43:41' prior: 50634161 overrides: 50630888!
notifyMovedTo: aPosition

	lines ! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:43:55' prior: 50634169 overrides: 50630888!
notifyMovedTo: aPosition

	lines add: aPosition asString.! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:43:58' prior: 50634174 overrides: 50630888!
notifyMovedTo: aPosition

	lines add: aPosition asString.! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/3/2023 19:44:11' prior: 50634180 overrides: 50630888!
notifyMovedTo: aPosition

	lines add: aPosition asString! !

----SNAPSHOT----(3 June 2023 19:44:14) CuisUniversity-5832.image priorSource: 9680446!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/3/2023 19:44:31'!
PASSED!
!MarsRoverLoggersTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:44:48'!
test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings

	| logger |
	
	logger := self positionLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'0@1'.
		'1@1'.
		'1@0' }
		equalsCollection: logger value.! !
!MarsRoverLoggersTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:45:14' prior: 50634198!
test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings

	| logger |
	
	logger := self positionLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {
		'East'.
		'North'
		}
		equalsCollection: logger value.! !

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/3/2023 19:45:18'!
FAILURE!
!MarsRoverLoggersTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:45:30' prior: 50634210!
test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings

	| logger |
	
	logger := self positionLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {'East'.'North'}
		equalsCollection: logger value.! !

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/3/2023 19:45:34'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/3/2023 19:45:34'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/3/2023 19:45:42'!
FAILURE!
!MarsRoverLoggersTest methodsFor: 'tests' stamp: 'IV 6/3/2023 19:46:11' prior: 50634227!
test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings

	| logger |
	
	logger := self headingLoggerForMarsRoverStartingAt: 0@0 heading: MarsRoverHeadingNorth processing: 'frflb'.
	
	self assertArray: {'East'.'North'}
		equalsCollection: logger value.! !

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/3/2023 19:46:12'!
PASSED!

----SNAPSHOT----(3 June 2023 19:46:58) CuisUniversity-5832.image priorSource: 9681275!

----STARTUP---- (4 June 2023 19:21:33) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!


!classRemoval: #MarsRoverWindow stamp: 'IV 6/4/2023 19:21:41'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverPositionLogger stamp: 'IV 6/4/2023 19:21:42'!
MarsRoverLogger subclass: #MarsRoverPositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingLogger stamp: 'IV 6/4/2023 19:21:42'!
MarsRoverLogger subclass: #MarsRoverHeadingLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverCompleteLogger stamp: 'IV 6/4/2023 19:21:42'!
MarsRoverLogger subclass: #MarsRoverCompleteLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverLogger stamp: 'IV 6/4/2023 19:21:42'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverObserver stamp: 'IV 6/4/2023 19:21:42'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingWest stamp: 'IV 6/4/2023 19:21:42'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingSouth stamp: 'IV 6/4/2023 19:21:42'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingNorth stamp: 'IV 6/4/2023 19:21:43'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeadingEast stamp: 'IV 6/4/2023 19:21:43'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverHeading stamp: 'IV 6/4/2023 19:21:43'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRover stamp: 'IV 6/4/2023 19:21:43'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverWindowTest stamp: 'IV 6/4/2023 19:21:43'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverTest stamp: 'IV 6/4/2023 19:21:43'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverLoggersTest stamp: 'IV 6/4/2023 19:21:44'!
TestCase subclass: #MarsRoverLoggersTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----End fileIn of C:\Users\nacho\Documents\GitHub\inge1-2023\08-MarsRover-ElRegreso\MarsRover2.st----!

Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers positionObservers headingObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #MarsRover category: 'MarsRover2-Ejercicio' stamp: 'IV 6/4/2023 19:25:35'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers positionObservers headingObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:26:09'!
addPositionObserver: anObserver

	observers add: anObserver! !
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:26:09' prior: 50634798!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionObserver: self.! !

!methodRemoval: MarsRover #newSuscriber: stamp: 'IV 6/4/2023 19:26:09'!
newSuscriber: anObserver

	observers add: anObserver!
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:26:17' prior: 50635589!
addPositionObserver: anObserver

	positionObservers add: anObserver! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:26:22'!
addHeadingObserver: anObserver

	positionObservers add: anObserver! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:26:26' prior: 50635610!
addHeadingObserver: anObserver

	headingObservers add: anObserver! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:27:24' prior: 50634443!
notifyHeadingEast

	headingObservers do: [:anObserver | anObserver notifyNowHeadingEast].! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:28:07' prior: 50634463!
notifyPosition: aPosition

	positionObservers do: [:anObserver | anObserver notifyMovedTo: aPosition].! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:28:30' prior: 50635626!
notifyPosition: aPosition

	positionObservers do: [:anObserver | anObserver notificationBlock value: aPosition].! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:28:47'!
notificationBlock

	self subclassResponsibility! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:29:09' prior: 50635639!
notificationBlock

	| notificationBlock |
	^notificationBlock! !

Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover notificationBlock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:29:33' prior: 50635644!
notificationBlock
! !

Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover notificationBlock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #MarsRoverObserver category: 'MarsRover2-Ejercicio' stamp: 'IV 6/4/2023 19:29:37'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover notificationBlock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:29:41' prior: 50635655!
notificationBlock
	^notificationBlock! !
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:30:26' prior: 50635595!
initializeFor: aMarsRover
	! !
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:30:31' prior: 50635678!
initializeFor: aMarsRover
	self subclassResponsibility ! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:30:40' overrides: 50635682!
initializeFor: aMarsRover
	self subclassResponsibility ! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:30:40' overrides: 50635682!
initializeFor: aMarsRover
	self subclassResponsibility ! !

!methodRemoval: MarsRoverObserver #initializeFor: stamp: 'IV 6/4/2023 19:30:40'!
initializeFor: aMarsRover
	self subclassResponsibility !
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:30:40'!
initializeFor: aMarsRover

	self subclassResponsibility! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:30:48' overrides: 50635687!
initializeFor: aMarsRover
	self subclassResponsibility ! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:30:48' overrides: 50635687!
initializeFor: aMarsRover
	self subclassResponsibility ! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:30:48' overrides: 50635687!
initializeFor: aMarsRover
	self subclassResponsibility ! !

!methodRemoval: MarsRoverLogger #initializeFor: stamp: 'IV 6/4/2023 19:30:48'!
initializeFor: aMarsRover
	self subclassResponsibility !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:30:48' overrides: 50635701!
initializeFor: aMarsRover

	self subclassResponsibility! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:00' prior: 50635719 overrides: 50635729!
initializeFor: aMarsRover
	lines := OrderedCollection new.! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:05' prior: 50635735 overrides: 50635729!
initializeFor: aMarsRover
	! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:11' prior: 50635741 overrides: 50635729!
initializeFor: aMarsRover
	! !

----SNAPSHOT----(4 June 2023 19:31:13) CuisUniversity-5832.image priorSource: 9684913!
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:16' prior: 50635746 overrides: 50635729!
initializeFor: aMarsRover
	! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:18' prior: 50635754 overrides: 50635729!
initializeFor: aMarsRover
	! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:25' prior: 50635759 overrides: 50635729!
initializeFor: aMarsRover
	! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:38' prior: 50635764 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:40' prior: 50635769 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover
	
	! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:44' prior: 50635775 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover
	
	marsRover ! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:50' prior: 50635781 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover
	
	marsRover addPositionObserver: self! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:51' prior: 50635787 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover
	
	marsRover addPositionObserver: self.! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:31:55' prior: 50635794 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionObserver: self.! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:32:04' prior: 50635713 overrides: 50635729!
initializeFor: aMarsRover
	lines := OrderedCollection new.! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:32:17' prior: 50635808 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionObserver: self.! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:32:22' prior: 50635814 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingObserver: self.! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:32:29' prior: 50635707 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionObserver: self.! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:32:31' prior: 50635828 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionObserver: self.
		marsRover addPositionObserver: self.! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:32:39' prior: 50635835 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionObserver: self.
	marsRover addHeadingObserver: self.! !

!classDefinition: #MarsRover category: 'MarsRover2-Ejercicio' stamp: 'IV 6/4/2023 19:34:44'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers positionNotifications headingObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:34:44' prior: 50635605!
addPositionObserver: anObserver

	positionNotifications add: anObserver! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:34:44' prior: 50635632!
notifyPosition: aPosition

	positionNotifications do: [:anObserver | anObserver notificationBlock value: aPosition].! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:34:53' prior: 50635866!
notifyPosition: aPosition

	positionNotifications do: [:aNotification | aNotification notificationBlock value: aPosition].! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:34:56' prior: 50635873!
notifyPosition: aPosition

	positionNotifications do: [:aNotification | aNotification value: aPosition].! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:35:31'!
addHeadingNotification: anObserver

	headingObservers add: anObserver! !
!MarsRoverHeadingLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:35:31' prior: 50635821 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: self.! !
!MarsRoverCompleteLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:35:31' prior: 50635843 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionObserver: self.
	marsRover addHeadingNotification: self.! !

!methodRemoval: MarsRover #addHeadingObserver: stamp: 'IV 6/4/2023 19:35:32'!
addHeadingObserver: anObserver

	headingObservers add: anObserver!
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:35:37' prior: 50635886!
addHeadingNotification: aNotification

	headingObservers add: aNotification! !

!classDefinition: #MarsRover category: 'MarsRover2-Ejercicio' stamp: 'IV 6/4/2023 19:35:45'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers positionNotifications headingNotifications'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:35:45' prior: 50635912!
addHeadingNotification: aNotification

	headingNotifications add: aNotification! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:35:45' prior: 50635620!
notifyHeadingEast

	headingNotifications do: [:anObserver | anObserver notifyNowHeadingEast].! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:35:56'!
addPositionNotification: anObserver

	positionNotifications add: anObserver! !
!MarsRoverCompleteLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:35:56' prior: 50635900 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionNotification: self.
	marsRover addHeadingNotification: self.! !
!MarsRoverPositionLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:35:56' prior: 50635801 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionNotification: self.! !

!methodRemoval: MarsRover #addPositionObserver: stamp: 'IV 6/4/2023 19:35:56'!
addPositionObserver: anObserver

	positionNotifications add: anObserver!
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:36:03' prior: 50635939!
addPositionNotification: aNotification

	positionNotifications add: aNotification! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:36:35' prior: 50635955 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionNotification: [:aPosition | self newPosition: aPosition].! !
!MarsRoverObserver methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:36:52'!
newPosition: aPosition

	self subclassResponsibility! !
!MarsRoverLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:36:52' overrides: 50635980!
newPosition: aPosition

	self subclassResponsibility! !
!MarsRoverCompleteLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:36:52' overrides: 50635985!
newPosition: aPosition

	lines add: aPosition asString! !
!MarsRoverHeadingLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:36:53' overrides: 50635985!
newPosition: aPosition! !
!MarsRoverPositionLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:36:53' overrides: 50635985!
newPosition: aPosition

	lines add: aPosition asString! !
!MarsRoverWindow methodsFor: 'notifications' stamp: 'IV 6/4/2023 19:36:53' overrides: 50635980!
newPosition: aPosition

	currentPosition := aPosition.! !

!methodRemoval: MarsRoverObserver #notifyMovedTo: stamp: 'IV 6/4/2023 19:36:53'!
notifyMovedTo: aPosition

	self subclassResponsibility!

!methodRemoval: MarsRoverLogger #notifyMovedTo: stamp: 'IV 6/4/2023 19:36:53'!
notifyMovedTo: aPosition

	self subclassResponsibility!

!methodRemoval: MarsRoverCompleteLogger #notifyMovedTo: stamp: 'IV 6/4/2023 19:36:53'!
notifyMovedTo: aPosition

	lines add: aPosition asString!

!methodRemoval: MarsRoverHeadingLogger #notifyMovedTo: stamp: 'IV 6/4/2023 19:36:53'!
notifyMovedTo: aPosition!

!methodRemoval: MarsRoverPositionLogger #notifyMovedTo: stamp: 'IV 6/4/2023 19:36:53'!
notifyMovedTo: aPosition

	lines add: aPosition asString!

!methodRemoval: MarsRoverWindow #notifyMovedTo: stamp: 'IV 6/4/2023 19:36:53'!
notifyMovedTo: aPosition

	currentPosition := aPosition.!

!methodRemoval: MarsRoverPositionLogger #notifyNowHeadingEast stamp: 'IV 6/4/2023 19:37:38'!
notifyNowHeadingEast
!

!methodRemoval: MarsRoverPositionLogger #notifyNowHeadingNorth stamp: 'IV 6/4/2023 19:37:39'!
notifyNowHeadingNorth
!

!methodRemoval: MarsRoverPositionLogger #notifyNowHeadingSouth stamp: 'IV 6/4/2023 19:37:40'!
notifyNowHeadingSouth
!

!methodRemoval: MarsRoverPositionLogger #notifyNowHeadingWest stamp: 'IV 6/4/2023 19:37:41'!
notifyNowHeadingWest
!

!methodRemoval: MarsRoverHeadingLogger #newPosition: stamp: 'IV 6/4/2023 19:37:49'!
newPosition: aPosition!
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:38:13' prior: 50635893 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
			
		].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:38:14' prior: 50636056 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		
		].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:38:15' prior: 50636064 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:38:16' prior: 50636072 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
			
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:38:33' prior: 50636080 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		aHeading isKindOf: MarsRoverHeadingNorth 	
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:38:56' prior: 50636088 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth ]
		
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:38:57' prior: 50636097 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth]
		
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:39:23' prior: 50636107 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth].
		(aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[self notifyNowHeadingSouth].
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth].
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth].
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:39:33' prior: 50636117 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth].
		(aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[self notifyNowHeadingSouth].
		(aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[self notifyNowHeadingEast].
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth].
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:39:40' prior: 50636135 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth].
		(aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[self notifyNowHeadingSouth].
		(aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[self notifyNowHeadingEast].
		(aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[self notifyNowHeadingNorth].
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:39:45' prior: 50636153 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[self notifyNowHeadingNorth].
		(aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[self notifyNowHeadingSouth].
		(aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[self notifyNowHeadingEast].
		(aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[self notifyNowHeadingWest].
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:39:51' prior: 50636171 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: 	[ self notifyNowHeadingNorth ].
		(aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		(aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		(aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:39:53' prior: 50636189 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		(aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		(aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		(aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		(aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	].! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:39:56' prior: 50636207 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	].! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:44:22' prior: 50635946 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionNotification: [:aPosition | self newPosition: aPosition].
	marsRover addHeadingNotification: self.! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:44:32' prior: 50636244 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	marsRover addPositionNotification: [:aPosition | self newPosition: aPosition].
	marsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	].! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:45:41'!
suscribeToPositionChanges

	^ marsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:45:41' prior: 50636254 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	self suscribeToPositionChanges.
	marsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	].! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:45:52'!
subscribeToHeadingChanges

	^ marsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:45:52' prior: 50636282 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	self suscribeToPositionChanges.
	self subscribeToHeadingChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:45:57'!
subscribeToHeadingChanges

	^ marsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !

!methodRemoval: MarsRoverCompleteLogger #subscribeToHeadingChanges stamp: 'IV 6/4/2023 19:45:57'!
subscribeToHeadingChanges

	^ marsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:46:00'!
suscribeToPositionChanges

	^ marsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !

!methodRemoval: MarsRoverCompleteLogger #suscribeToPositionChanges stamp: 'IV 6/4/2023 19:46:00'!
suscribeToPositionChanges

	^ marsRover addPositionNotification: [:aPosition | self newPosition: aPosition]!
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:46:14' prior: 50636225 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	self subscribeToHeadingChanges ! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:46:15' prior: 50636372 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	self subscribeToHeadingChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:46:41'!
subscribeToPositionChanges

	^ marsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !
!MarsRoverCompleteLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:46:41' prior: 50636318 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	self subscribeToPositionChanges.
	self subscribeToHeadingChanges.! !

!methodRemoval: MarsRoverLogger #suscribeToPositionChanges stamp: 'IV 6/4/2023 19:46:41'!
suscribeToPositionChanges

	^ marsRover addPositionNotification: [:aPosition | self newPosition: aPosition]!
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:46:50' prior: 50635973 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	self subscribeToPositionChanges ! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:46:51' prior: 50636407 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	
	self subscribeToPositionChanges.! !
!MarsRoverPositionLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:46:54' prior: 50636414 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	self subscribeToPositionChanges.! !
!MarsRoverHeadingLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:47:04' prior: 50636379 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	self subscribeToHeadingChanges.! !
!MarsRoverCompleteLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:47:07' prior: 50636393 overrides: 50635729!
initializeFor: aMarsRover
	marsRover := aMarsRover.
	self subscribeToPositionChanges.
	self subscribeToHeadingChanges.! !

!methodRemoval: MarsRoverObserver #notificationBlock stamp: 'IV 6/4/2023 19:48:47'!
notificationBlock
	^notificationBlock!

Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #MarsRoverObserver category: 'MarsRover2-Ejercicio' stamp: 'IV 6/4/2023 19:48:52'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!methodRemoval: MarsRover #notifyHeadingEast stamp: 'IV 6/4/2023 19:49:23'!
notifyHeadingEast

	headingNotifications do: [:anObserver | anObserver notifyNowHeadingEast].!

!methodRemoval: MarsRover #notifyHeadingNorth stamp: 'IV 6/4/2023 19:49:24'!
notifyHeadingNorth

	observers do: [:anObserver | anObserver notifyNowHeadingNorth].!

!methodRemoval: MarsRover #notifyHeadingSouth stamp: 'IV 6/4/2023 19:49:26'!
notifyHeadingSouth

	observers do: [:anObserver | anObserver notifyNowHeadingSouth].!

!methodRemoval: MarsRover #notifyHeadingWest stamp: 'IV 6/4/2023 19:49:27'!
notifyHeadingWest

	observers do: [:anObserver | anObserver notifyNowHeadingWest].!
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:10' prior: 50634496!
rotateLeft
	
	head rotateLeft
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:11' prior: 50636479!
rotateLeft
	
	head rotateLeft
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:15' prior: 50636483!
rotateLeft
	
	head rotateLeft
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:17' prior: 50634491!
headWest
	
	head := MarsRoverHeadingWest for: self.
	
! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:19' prior: 50636491!
headWest
	
	head := MarsRoverHeadingWest for: self.! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:22' prior: 50634486!
headSouth
	
	head := MarsRoverHeadingSouth for: self.
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:23' prior: 50636501!
headSouth
	
	head := MarsRoverHeadingSouth for: self.! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:25' prior: 50634481!
headNorth
	
	head := MarsRoverHeadingNorth for: self.
! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:26' prior: 50636511!
headNorth
	
	head := MarsRoverHeadingNorth for: self.! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:29' prior: 50634476!
headEast
	
	head := MarsRoverHeadingEast for: self.! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:50:33' prior: 50636487!
rotateLeft
	
	head rotateLeft
	
	
	
	! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:50:57'!
notifyHeading: aPosition

	headingNotifications do: [:aNotification | aNotification value: aPosition].! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:52:00' prior: 50636526!
rotateLeft
	
	head rotateLeft
	
	 
	
	
	
	! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:52:30'!
notifyHeading

	headingNotifications do: [:aNotification | aNotification value: head].! !

!methodRemoval: MarsRover #notifyHeading: stamp: 'IV 6/4/2023 19:52:32'!
notifyHeading: aPosition

	headingNotifications do: [:aNotification | aNotification value: aPosition].!
!MarsRover methodsFor: 'observers' stamp: 'IV 6/4/2023 19:52:45'!
notifyPosition

	positionNotifications do: [:aNotification | aNotification value: position ].! !

!methodRemoval: MarsRover #notifyPosition: stamp: 'IV 6/4/2023 19:52:50'!
notifyPosition: aPosition

	positionNotifications do: [:aNotification | aNotification value: aPosition].!
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:53:03' prior: 50636536!
rotateLeft
	
	head rotateLeft
	
	self notifyHeading.
	
	 
	
	
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:53:04' prior: 50636563!
rotateLeft
	
	head rotateLeft.
	
	self notifyHeading.
	
	 
	
	
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:53:06' prior: 50636568!
rotateLeft
	
	head rotateLeft.
	self notifyHeading.
	
	 
	
	
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:53:15' prior: 50634500!
rotateRight
	
	head rotateRight.
	self notifyPosition.! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/4/2023 19:53:19' prior: 50636578!
rotateRight
	
	head rotateRight.
	self notifyHeading.! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/4/2023 19:53:38' prior: 50634535!
moveForward
	
	head moveForward.
	self notifyPosition.! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/4/2023 19:53:42' prior: 50634526!
moveBackward
	
	head moveBackward.
	self notifyPosition.! !

----SNAPSHOT----(4 June 2023 19:53:48) CuisUniversity-5832.image priorSource: 9731166!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/4/2023 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/4/2023 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/4/2023 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/4/2023 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/4/2023 19:53:54'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/4/2023 19:54:07'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/4/2023 19:54:07'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/4/2023 19:54:07'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/4/2023 19:54:07'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/4/2023 19:54:07'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/4/2023 19:54:19'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/4/2023 19:54:22'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/4/2023 19:54:23'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/4/2023 19:54:29'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/4/2023 19:54:29'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:54:56' prior: 50634469!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	
	positionNotifications := OrderedCollection new.! !
!MarsRover methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:55:06' prior: 50636724!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self.
	
	positionNotifications := OrderedCollection new.
	headingNotifications := OrderedCollection new.! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/4/2023 19:55:09'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/4/2023 19:55:12'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 19:55:15'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 19:55:17'!
PASSED!

!testRun: #MarsRoverWindowTest #test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 19:55:19'!
FAILURE!

!testRun: #MarsRoverWindowTest #test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/4/2023 19:55:19'!
ERROR!

!testRun: #MarsRoverWindowTest #test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/4/2023 19:55:19'!
ERROR!

!testRun: #MarsRoverWindowTest #test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 19:55:19'!
ERROR!

!testRun: #MarsRoverWindowTest #test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 19:55:19'!
ERROR!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/4/2023 19:55:19'!
ERROR!

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 19:55:22'!
PASSED!

----SNAPSHOT----(4 June 2023 19:56:52) CuisUniversity-5832.image priorSource: 9758299!

!methodRemoval: MarsRoverLoggersTest #loggerFor:at:heading:processing: stamp: 'IV 6/4/2023 19:57:00'!
loggerFor: aMarsRoverLoggerKind at: aPosition heading: aHeadingDirection processing: aCommandsString

	| marsRover logger |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := aMarsRoverLoggerKind for: marsRover.

	marsRover process: aCommandsString.

	^ logger!
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 19:57:00' prior: 50635203!
headingLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
logger := MarsRoverHeadingLogger for: marsRover.
marsRover process: aCommandsString.
^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 19:57:00' prior: 50635193!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString

	| marsRover logger |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
logger := MarsRoverCompleteLogger for: marsRover.
marsRover process: aCommandsString.
^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 19:57:00' prior: 50635225!
positionLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
logger := MarsRoverPositionLogger for: marsRover.
marsRover process: aCommandsString.
^ logger! !

!methodRemoval: MarsRoverObserver class #for: stamp: 'IV 6/4/2023 19:58:12'!
for: aMarsRover
	^self new initializeFor: aMarsRover !
!MarsRoverLogger class methodsFor: 'no messages' stamp: 'IV 6/4/2023 19:58:58'!
forPositionOf: aMarsRover
	^self new initializeFor: aMarsRover ! !
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:59:03' prior: 50637037!
forPositionOf: aMarsRover
	^self new initializeForPositionOf: aMarsRover ! !
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:59:17'!
forHeadingOf: aMarsRover
	^self new initializeForHeadingOf: aMarsRover ! !
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 19:59:28'!
forPositionAndHeadingOf: aMarsRover
	^self new initializeForPositionAndHeadingOf: aMarsRover ! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 19:59:54'!
initializeForPositionOf: aMarsRover

	self subclassResponsibility! !

----SNAPSHOT----(4 June 2023 20:00:08) CuisUniversity-5832.image priorSource: 9770584!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:00:48' prior: 50637061!
initializeForPositionOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToPositionChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:00:59' prior: 50637069!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:01:24' prior: 50637076!
initializeForPositionOf: aMarsRover

	marsRover := aMarsRover.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:01:45' prior: 50637082!
initializeForPositionOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToPositionChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:01:47' prior: 50637087!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:01:52' prior: 50637094!
initializeForPositionOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToPositionChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:02:09'!
initializeForHeadingOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToHeadingChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:02:15'!
initializeForPositionAndHeadingOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToPositionChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:02:19' prior: 50637112!
initializeForPositionAndHeadingOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToPositionChanges.
	self subscribeToHeadingChanges.! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:03:49' prior: 50637009!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString

	| marsRover logger |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
logger := MarsRoverLogger forPositionAndHeading: marsRover.
marsRover process: aCommandsString.
^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:00' prior: 50637127!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString

	| marsRover logger |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
logger := MarsRoverLogger forPositionAndHeadingOf: marsRover.
marsRover process: aCommandsString.
^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:07' prior: 50637140!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString

	| marsRover logger |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverLogger forPositionAndHeadingOf: marsRover.
	marsRover process: aCommandsString.
	^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:09' prior: 50637153!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString

	| marsRover logger |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverLogger forPositionAndHeadingOf: marsRover.
	marsRover process: aCommandsString.
	
	^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:23' prior: 50636997!
headingLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverHeadingLogger for: marsRover.
	marsRover process: aCommandsString.
	
	^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:25' prior: 50637179!
headingLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverHeadingLogger for: marsRover.
	marsRover process: aCommandsString.
	
	^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:30' prior: 50637192!
headingLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverLogger forHeadingOf: marsRover.
	marsRover process: aCommandsString.
	
	^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:37' prior: 50637021!
positionLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverPositionLogger for: marsRover.
	marsRover process: aCommandsString.
	
	^ logger! !
!MarsRoverLoggersTest methodsFor: 'loggers' stamp: 'IV 6/4/2023 20:04:42' prior: 50637218!
positionLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |
	
	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverLogger forPositionOf: marsRover.
	marsRover process: aCommandsString.
	
	^ logger! !

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:05:05'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:05:05'!
ERROR!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:05:05'!
ERROR!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 20:05:05'!
ERROR!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 20:05:05'!
ERROR!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:05:05'!
ERROR!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 20:05:05'!
ERROR!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 20:05:05'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:05:08'!
ERROR!
!MarsRoverLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 20:05:45' prior: 50635985 overrides: 50635980!
newPosition: aPosition

	lines add: aPosition asString! !

!methodRemoval: MarsRoverCompleteLogger #newPosition: stamp: 'IV 6/4/2023 20:05:45'!
newPosition: aPosition

	lines add: aPosition asString!

!methodRemoval: MarsRoverPositionLogger #newPosition: stamp: 'IV 6/4/2023 20:05:45'!
newPosition: aPosition

	lines add: aPosition asString!
!MarsRoverLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 20:05:52' prior: 50634874 overrides: 50634809!
notifyNowHeadingEast

	lines add: 'East'.! !

!methodRemoval: MarsRoverCompleteLogger #notifyNowHeadingEast stamp: 'IV 6/4/2023 20:05:52'!
notifyNowHeadingEast

	lines add: 'East'.!

!methodRemoval: MarsRoverHeadingLogger #notifyNowHeadingEast stamp: 'IV 6/4/2023 20:05:52'!
notifyNowHeadingEast

	lines add: 'East'.!
!MarsRoverLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 20:05:57' prior: 50634879 overrides: 50634814!
notifyNowHeadingNorth

	lines add: 'North'.! !

!methodRemoval: MarsRoverCompleteLogger #notifyNowHeadingNorth stamp: 'IV 6/4/2023 20:05:57'!
notifyNowHeadingNorth

	lines add: 'North'.!

!methodRemoval: MarsRoverHeadingLogger #notifyNowHeadingNorth stamp: 'IV 6/4/2023 20:05:57'!
notifyNowHeadingNorth

	lines add: 'North'.!
!MarsRoverLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 20:06:02' prior: 50634884 overrides: 50634819!
notifyNowHeadingSouth

	lines add: 'South'.! !

!methodRemoval: MarsRoverCompleteLogger #notifyNowHeadingSouth stamp: 'IV 6/4/2023 20:06:02'!
notifyNowHeadingSouth

	lines add: 'South'.!

!methodRemoval: MarsRoverHeadingLogger #notifyNowHeadingSouth stamp: 'IV 6/4/2023 20:06:02'!
notifyNowHeadingSouth

	lines add: 'South'.!
!MarsRoverLogger methodsFor: 'notifications' stamp: 'IV 6/4/2023 20:06:07' prior: 50634889 overrides: 50634824!
notifyNowHeadingWest

	lines add: 'West'.! !

!methodRemoval: MarsRoverCompleteLogger #notifyNowHeadingWest stamp: 'IV 6/4/2023 20:06:07'!
notifyNowHeadingWest

	lines add: 'West'.!

!methodRemoval: MarsRoverHeadingLogger #notifyNowHeadingWest stamp: 'IV 6/4/2023 20:06:07'!
notifyNowHeadingWest

	lines add: 'West'.!

!methodRemoval: MarsRoverWindowTest #completeLoggerForMarsRoverStartingAt:heading:processing: stamp: 'IV 6/4/2023 20:07:26'!
completeLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverCompleteLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger!

!methodRemoval: MarsRoverWindowTest #headingLoggerForMarsRoverStartingAt:heading:processing: stamp: 'IV 6/4/2023 20:07:27'!
headingLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverHeadingLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger!

!methodRemoval: MarsRoverWindowTest #positionLoggerForMarsRoverStartingAt:heading:processing: stamp: 'IV 6/4/2023 20:07:28'!
positionLoggerForMarsRoverStartingAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := MarsRoverPositionLogger for: marsRover.

	marsRover process: aCommandsString.

	^ logger!

!classRemoval: #MarsRoverCompleteLogger stamp: 'IV 6/4/2023 20:08:16'!
MarsRoverLogger subclass: #MarsRoverCompleteLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingLogger stamp: 'IV 6/4/2023 20:08:19'!
MarsRoverLogger subclass: #MarsRoverHeadingLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverPositionLogger stamp: 'IV 6/4/2023 20:08:20'!
MarsRoverLogger subclass: #MarsRoverPositionLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 20:08:22'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 20:08:26'!
PASSED!

!methodRemoval: MarsRoverLogger #initializeFor: stamp: 'IV 6/4/2023 20:08:38'!
initializeFor: aMarsRover

	self subclassResponsibility!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:08:50' prior: 50637119!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChanges.
	self subscribeToHeadingChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:08:53' prior: 50637100!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChanges.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:09:23' prior: 50636325!
subscribeToHeadingChanges

	^ MarsRover new addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:09:34'!
subscribeToHeadingChanges: aMarsRover

	^ MarsRover new addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:09:34' prior: 50637106!
initializeForHeadingOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToHeadingChanges: MarsRover new.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:09:34' prior: 50637491!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChanges.
	self subscribeToHeadingChanges: MarsRover new.! !

!methodRemoval: MarsRoverLogger #subscribeToHeadingChanges stamp: 'IV 6/4/2023 20:09:34'!
subscribeToHeadingChanges

	^ MarsRover new addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:09:34' prior: 50637521!
subscribeToHeadingChanges: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:09:44'!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:09:44' prior: 50637546!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChanges.
	self subscribeToHeadingChangesOf: MarsRover new.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:09:44' prior: 50637539!
initializeForHeadingOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToHeadingChangesOf: MarsRover new.! !

!methodRemoval: MarsRoverLogger #subscribeToHeadingChanges: stamp: 'IV 6/4/2023 20:09:44'!
subscribeToHeadingChanges: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:09:51' prior: 50636385!
subscribeToPositionChanges

	^ MarsRover new addPositionNotification: [:aPosition | self newPosition: aPosition]! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:10:00'!
subscribeToPositionChanges: aMarsRover

	^ MarsRover new addPositionNotification: [:aPosition | self newPosition: aPosition]! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:10:00' prior: 50637498!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChanges: MarsRover new.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:10:00' prior: 50637605!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChanges: MarsRover new.
	self subscribeToHeadingChangesOf: MarsRover new.! !

!methodRemoval: MarsRoverLogger #subscribeToPositionChanges stamp: 'IV 6/4/2023 20:10:00'!
subscribeToPositionChanges

	^ MarsRover new addPositionNotification: [:aPosition | self newPosition: aPosition]!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:10:00' prior: 50637644!
subscribeToPositionChanges: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:10:06'!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:10:06' prior: 50637652!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChangesOf: MarsRover new.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:10:06' prior: 50637658!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChangesOf: MarsRover new.
	self subscribeToHeadingChangesOf: MarsRover new.! !

!methodRemoval: MarsRoverLogger #subscribeToPositionChanges: stamp: 'IV 6/4/2023 20:10:06'!
subscribeToPositionChanges: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:10:14' prior: 50637613!
initializeForHeadingOf: aMarsRover

	marsRover := aMarsRover.
	self subscribeToHeadingChangesOf: aMarsRover.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:10:15' prior: 50637709!
initializeForHeadingOf: aMarsRover

	self subscribeToHeadingChangesOf: aMarsRover.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:10:21' prior: 50637694!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChangesOf: aMarsRover.
	self subscribeToHeadingChangesOf: aMarsRover.! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:10:24' prior: 50637688!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChangesOf: aMarsRover.! !

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 20:10:40'!
PASSED!

!classDefinition: #MarsRoverWindowTest category: 'MarsRover2-Tests' stamp: 'IV 6/4/2023 20:12:37'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: 'marsRover_'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!
!MarsRoverWindowTest methodsFor: 'setUp/tearDown' stamp: 'IV 6/4/2023 20:12:36' overrides: 16961394!
setUp

	marsRover_ := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:13:17' prior: 50635489!
test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty

	| window |
	window := MarsRoverWindow for: marsRover_.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:13:24' prior: 50637786!
test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty

	| window |
	
	window := MarsRoverWindow for: marsRover_.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:13:38' prior: 50635500!
test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition

	| window |
	window := MarsRoverWindow for: marsRover_.

	marsRover_ process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:13:40' prior: 50637806!
test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition

	| window |
	
	window := MarsRoverWindow for: marsRover_.

	marsRover_ process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:13:48' prior: 50635514!
test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition

	| window |
	
	window := MarsRoverWindow for: marsRover_.

	marsRover_ process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:13:56' prior: 50635528!
test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| window |
	
	window := MarsRoverWindow for: marsRover_.

	marsRover_ process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:14:03' prior: 50635542!
test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| window |
	
	window := MarsRoverWindow for: marsRover_.

	marsRover_ process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:14:11' prior: 50635556!
test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| window |
	
	window := MarsRoverWindow for: marsRover_.

	marsRover_ process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !

!methodRemoval: MarsRoverWindowTest #windowWith:forMarsRoverAt:heading:processing: stamp: 'IV 6/4/2023 20:14:29'!
windowWith: aMarsRoverWindowKind forMarsRoverAt: aPosition heading: aHeadingDirection processing: aCommandsString  

	| marsRover logger |

	marsRover := MarsRover at: aPosition heading: aHeadingDirection.
	logger := aMarsRoverWindowKind for: marsRover.

	marsRover process: aCommandsString.

	^ logger!

!classDefinition: #MarsRoverWindowTest category: 'MarsRover2-Tests' stamp: 'IV 6/4/2023 20:14:39'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:14:39' prior: 50637861!
test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| window |
	
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:14:39' prior: 50637796!
test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty

	| window |
	
	window := MarsRoverWindow for: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:14:39' prior: 50637850!
test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| window |
	
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:14:39' prior: 50637780 overrides: 16961394!
setUp

	marsRover := MarsRover at: 0@0 heading: MarsRoverHeadingNorth.! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:14:39' prior: 50637828!
test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition

	| window |
	
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:14:39' prior: 50637817!
test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition

	| window |
	
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:14:39' prior: 50637839!
test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| window |
	
	window := MarsRoverWindow for: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !

!testRun: #MarsRoverWindowTest #test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:14:47'!
ERROR!

!testRun: #MarsRoverWindowTest #test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/4/2023 20:14:47'!
ERROR!

!testRun: #MarsRoverWindowTest #test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/4/2023 20:14:47'!
ERROR!

!testRun: #MarsRoverWindowTest #test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:14:47'!
ERROR!

!testRun: #MarsRoverWindowTest #test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:14:47'!
ERROR!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/4/2023 20:14:47'!
ERROR!

!methodRemoval: MarsRoverWindow #initializeFor: stamp: 'IV 6/4/2023 20:15:55'!
initializeFor: aMarsRover
	self subclassResponsibility !

!methodRemoval: MarsRoverObserver #initializeFor: stamp: 'IV 6/4/2023 20:16:15'!
initializeFor: aMarsRover

	self subclassResponsibility!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:27'!
initializeForHeadingOf: aMarsRover

	self subscribeToHeadingChangesOf: aMarsRover.! !

!methodRemoval: MarsRoverLogger #initializeForHeadingOf: stamp: 'IV 6/4/2023 20:16:27'!
initializeForHeadingOf: aMarsRover

	self subscribeToHeadingChangesOf: aMarsRover.!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:31'!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChangesOf: aMarsRover.
	self subscribeToHeadingChangesOf: aMarsRover.! !

!methodRemoval: MarsRoverLogger #initializeForPositionAndHeadingOf: stamp: 'IV 6/4/2023 20:16:31'!
initializeForPositionAndHeadingOf: aMarsRover

	self subscribeToPositionChangesOf: aMarsRover.
	self subscribeToHeadingChangesOf: aMarsRover.!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:33'!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChangesOf: aMarsRover.! !

!methodRemoval: MarsRoverLogger #initializeForPositionOf: stamp: 'IV 6/4/2023 20:16:33'!
initializeForPositionOf: aMarsRover

	self subscribeToPositionChangesOf: aMarsRover.!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:43'!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !

!methodRemoval: MarsRoverLogger #subscribeToHeadingChangesOf: stamp: 'IV 6/4/2023 20:16:43'!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]!
!MarsRoverObserver methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:49'!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !

!methodRemoval: MarsRoverLogger #subscribeToPositionChangesOf: stamp: 'IV 6/4/2023 20:16:49'!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:54' overrides: 50638038!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:54' overrides: 50638038!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !

!methodRemoval: MarsRoverObserver #subscribeToHeadingChangesOf: stamp: 'IV 6/4/2023 20:16:54'!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]!
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:16:54'!
subscribeToHeadingChangesOf: aMarsRover

	self subclassResponsibility! !
!MarsRoverLogger methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:58' overrides: 50638072!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !
!MarsRoverWindow methodsFor: 'initialization' stamp: 'IV 6/4/2023 20:16:58' overrides: 50638072!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !

!methodRemoval: MarsRoverObserver #subscribeToPositionChangesOf: stamp: 'IV 6/4/2023 20:16:58'!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]!
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'IV 6/4/2023 20:16:58'!
subscribeToPositionChangesOf: aMarsRover

	self subclassResponsibility! !

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:17:30'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:17:30'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:17:30'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 20:17:30'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 20:17:30'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:17:30'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 20:17:30'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 20:17:30'!
PASSED!
!MarsRoverObserver methodsFor: 'subscriptions' stamp: 'IV 6/4/2023 20:17:55' prior: 50638164!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]! !

!methodRemoval: MarsRoverWindow #subscribeToPositionChangesOf: stamp: 'IV 6/4/2023 20:17:55'!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]!

!methodRemoval: MarsRoverLogger #subscribeToPositionChangesOf: stamp: 'IV 6/4/2023 20:17:55'!
subscribeToPositionChangesOf: aMarsRover

	^ aMarsRover addPositionNotification: [:aPosition | self newPosition: aPosition]!
!MarsRoverObserver methodsFor: 'subscriptions' stamp: 'IV 6/4/2023 20:18:00' prior: 50638137!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !

!methodRemoval: MarsRoverWindow #subscribeToHeadingChangesOf: stamp: 'IV 6/4/2023 20:18:00'!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]!

!methodRemoval: MarsRoverLogger #subscribeToHeadingChangesOf: stamp: 'IV 6/4/2023 20:18:00'!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]!
!MarsRoverWindow methodsFor: 'nil' stamp: 'IV 6/4/2023 20:19:13' overrides: 16920235!
initialize
	currentPosition := 'No information'.
	currentHeading := 'No information'.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/4/2023 20:19:39' prior: 50635033!
positionStatus

	| positionString |

	currentPosition ifNil: [positionString := 'No information'] ifNotNil: [ positionString := currentPosition asString ].
	
	^'Position: ', currentPosition asString.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/4/2023 20:19:43' prior: 50638283!
positionStatus

	
	
	^'Position: ', currentPosition asString.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/4/2023 20:19:48' prior: 50638293!
positionStatus

	^'Position: ', currentPosition asString.! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/4/2023 20:19:58' prior: 50635024!
headingStatus
	
	^'Heading: ', currentHeading asString .! !
!MarsRoverWindow methodsFor: 'evaluating' stamp: 'IV 6/4/2023 20:19:59' prior: 50638303!
headingStatus
	
	^'Heading: ', currentHeading asString.! !

!testRun: #MarsRoverWindowTest #test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:21:16'!
ERROR!

!testRun: #MarsRoverWindowTest #test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/4/2023 20:21:16'!
ERROR!

!testRun: #MarsRoverWindowTest #test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/4/2023 20:21:16'!
ERROR!

!testRun: #MarsRoverWindowTest #test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:21:16'!
ERROR!

!testRun: #MarsRoverWindowTest #test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:21:16'!
ERROR!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/4/2023 20:21:16'!
ERROR!
!MarsRoverObserver class methodsFor: 'instance creation' stamp: 'IV 6/4/2023 20:21:37'!
forHeadingOf: aMarsRover
	^self new initializeForHeadingOf: aMarsRover ! !

!methodRemoval: MarsRoverLogger class #forHeadingOf: stamp: 'IV 6/4/2023 20:21:37'!
forHeadingOf: aMarsRover
	^self new initializeForHeadingOf: aMarsRover !
!MarsRoverObserver class methodsFor: 'instance creation' stamp: 'IV 6/4/2023 20:21:40'!
forPositionAndHeadingOf: aMarsRover
	^self new initializeForPositionAndHeadingOf: aMarsRover ! !

!methodRemoval: MarsRoverLogger class #forPositionAndHeadingOf: stamp: 'IV 6/4/2023 20:21:40'!
forPositionAndHeadingOf: aMarsRover
	^self new initializeForPositionAndHeadingOf: aMarsRover !
!MarsRoverObserver class methodsFor: 'instance creation' stamp: 'IV 6/4/2023 20:21:43'!
forPositionOf: aMarsRover
	^self new initializeForPositionOf: aMarsRover ! !

!methodRemoval: MarsRoverLogger class #forPositionOf: stamp: 'IV 6/4/2023 20:21:43'!
forPositionOf: aMarsRover
	^self new initializeForPositionOf: aMarsRover !

!testRun: #MarsRoverWindowTest #test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:21:50'!
ERROR!

!testRun: #MarsRoverWindowTest #test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/4/2023 20:21:50'!
ERROR!

!testRun: #MarsRoverWindowTest #test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/4/2023 20:21:50'!
ERROR!

!testRun: #MarsRoverWindowTest #test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:21:50'!
ERROR!

!testRun: #MarsRoverWindowTest #test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:21:50'!
ERROR!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/4/2023 20:21:50'!
ERROR!

!testRun: #MarsRoverWindowTest #test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:21:52'!
ERROR!
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:22:09' prior: 50637905!
test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty

	| window |
	
	window := MarsRoverWindow forPositionAndHeading: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:22:13' prior: 50638404!
test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty

	| window |
	
	window := MarsRoverWindow forPositionAndHeadingOf: marsRover.

	self assert: 'Position: No information, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:22:17' prior: 50637944!
test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition

	| window |
	
	window := MarsRoverWindow forPositionAndHeadingOf: marsRover.

	marsRover process: 'f'.

	self assert: 'Position: 0@1, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:22:19' prior: 50637933!
test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition

	| window |
	
	window := MarsRoverWindow forPositionAndHeadingOf: marsRover.

	marsRover process: 'b'.

	self assert: 'Position: 0@ -1, Heading: No information' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:22:21' prior: 50637955!
test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection

	| window |
	
	window := MarsRoverWindow forPositionAndHeadingOf: marsRover.

	marsRover process: 'r'.

	self assert: 'Position: No information, Heading: East' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:22:23' prior: 50637915!
test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection

	| window |
	
	window := MarsRoverWindow forPositionAndHeadingOf: marsRover.

	marsRover process: 'l'.

	self assert: 'Position: No information, Heading: West' equals: (window value).! !
!MarsRoverWindowTest methodsFor: 'tests' stamp: 'IV 6/4/2023 20:22:25' prior: 50637894!
test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading

	| window |
	
	window := MarsRoverWindow forPositionAndHeadingOf: marsRover.

	marsRover process: 'frflb'.

	self assert: 'Position: 1@0, Heading: North' equals: (window value).! !

!testRun: #MarsRoverWindowTest #test01CompleteWindowForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:23:00'!
PASSED!

!testRun: #MarsRoverWindowTest #test02CompleteWindowForRoverThatMovesBackwardsShowsCurrentPosition stamp: 'IV 6/4/2023 20:23:00'!
PASSED!

!testRun: #MarsRoverWindowTest #test03CompleteWindowForRoverThatMovesForwardShowsCurrentPosition stamp: 'IV 6/4/2023 20:23:00'!
PASSED!

!testRun: #MarsRoverWindowTest #test04CompleteWindowForRoverThatRotatesRightShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:23:00'!
PASSED!

!testRun: #MarsRoverWindowTest #test05CompleteWindowForRoverThatRotatesLeftShowsCurrentHeadingDirection stamp: 'IV 6/4/2023 20:23:00'!
PASSED!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/4/2023 20:23:00'!
PASSED!
!MarsRoverObserver methodsFor: 'subscriptions' stamp: 'IV 6/4/2023 20:29:40' prior: 50638226!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
		aHeading.
	]! !
!MarsRoverObserver methodsFor: 'subscriptions' stamp: 'IV 6/4/2023 20:30:04' prior: 50638508!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
		aHeading moveForward .
	]! !
!MarsRoverObserver methodsFor: 'subscriptions' stamp: 'IV 6/4/2023 20:30:04' prior: 50638526!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
		aHeading moveForward.
	]! !

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:30:08'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:30:08'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:30:09'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 20:30:09'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 20:30:09'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:30:09'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 20:30:09'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 20:30:09'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:30:09'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test01CompleteLogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/4/2023 20:30:13'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02CompleteLogForRoverThatMovesForwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:30:13'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03CompleteLogForRoverThatMovesBackwardHasLineWithNewPosition stamp: 'IV 6/4/2023 20:30:13'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04CompleteLogForRoverThatRotatesRightHasLineWithNewHeading stamp: 'IV 6/4/2023 20:30:13'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05CompleteLogForRoverThatRotatesLeftHasLineWithNewHeading stamp: 'IV 6/4/2023 20:30:13'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:30:13'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test07PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositions stamp: 'IV 6/4/2023 20:30:13'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadings stamp: 'IV 6/4/2023 20:30:13'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06CompleteLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/4/2023 20:30:13'!
FAILURE!
!MarsRoverObserver methodsFor: 'subscriptions' stamp: 'IV 6/4/2023 20:30:24' prior: 50638544!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].

	]! !
!MarsRoverObserver methodsFor: 'subscriptions' stamp: 'IV 6/4/2023 20:30:25' prior: 50638643!
subscribeToHeadingChangesOf: aMarsRover

	^ aMarsRover addHeadingNotification: [:aHeading | 
		( aHeading isKindOf: MarsRoverHeadingNorth ) ifTrue: 	[ self notifyNowHeadingNorth ].
		( aHeading isKindOf: MarsRoverHeadingSouth ) ifTrue: 	[ self notifyNowHeadingSouth ].
		( aHeading isKindOf: MarsRoverHeadingEast ) ifTrue: 	[ self notifyNowHeadingEast ].
		( aHeading isKindOf: MarsRoverHeadingWest ) ifTrue: 	[ self notifyNowHeadingWest ].
	]! !

----SNAPSHOT----(4 June 2023 20:34:28) CuisUniversity-5832.image priorSource: 9773284!

----SNAPSHOT----(4 June 2023 20:34:46) CuisUniversity-5832.image priorSource: 9824830!

----STARTUP---- (5 June 2023 09:20:37) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!


!classRemoval: #MarsRoverWindowTest stamp: 'IV 6/5/2023 09:20:43'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #MarsRoverTest stamp: 'IV 6/5/2023 09:20:43'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #MarsRoverLoggersTest stamp: 'IV 6/5/2023 09:20:43'!
TestCase subclass: #MarsRoverLoggersTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #MarsRoverWindow stamp: 'IV 6/5/2023 09:20:44'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverLogger stamp: 'IV 6/5/2023 09:20:44'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverObserver stamp: 'IV 6/5/2023 09:20:44'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingWest stamp: 'IV 6/5/2023 09:20:44'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingSouth stamp: 'IV 6/5/2023 09:20:44'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingNorth stamp: 'IV 6/5/2023 09:20:44'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingEast stamp: 'IV 6/5/2023 09:20:45'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeading stamp: 'IV 6/5/2023 09:20:45'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRover stamp: 'IV 6/5/2023 09:20:45'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers positionNotifications headingNotifications'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

----End fileIn of C:\Users\nacho\Documents\GitHub\inge1-2023\08-MarsRover-ElRegreso\MarsRover2.st----!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test01WindowForRoverThatHasntProcessedCommandsShowsNoInformation stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test02WindowForRoverThatMovesForwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test03WindowForRoverThatMovesForwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test04WindowForRoverThatMovesForwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test05WindowForRoverThatMovesForwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatMovesBackwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test07CompleteWindowForRoverThatMovesBackwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test08CompleteWindowForRoverThatMovesBackwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test09CompleteWindowForRoverThatMovesBackwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test10WindowForRoverThatRotatesRightHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test11WindowForRoverThatRotatesRightHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test12WindowForRoverThatRotatesRightHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:58'!
PASSED!

!testRun: #MarsRoverWindowTest #test13WindowForRoverThatRotatesRightHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test14WindowForRoverThatRotatesLeftHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test15WindowForRoverThatRotatesLeftHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test16WindowForRoverThatRotatesLeftHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test17WindowForRoverThatRotatesLeftHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test18WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test19PositionWindowForRoverThatProcessesMultipleCommandsShowsCurrentPosition stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverWindowTest #test20HeadingWindowForRoverThatProcessesMultipleCommandsShowsCurrentHeading stamp: 'IV 6/5/2023 09:22:59'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:23:01'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:23:01'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:23:01'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:23:01'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:23:01'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:23:01'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:23:02'!
PASSED!

!testRun: #MarsRoverWindowTest #test01WindowForRoverThatHasntProcessedCommandsShowsNoInformation stamp: 'IV 6/5/2023 09:23:04'!
PASSED!

!testRun: #MarsRoverWindowTest #test02WindowForRoverThatMovesForwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:04'!
PASSED!

!testRun: #MarsRoverWindowTest #test03WindowForRoverThatMovesForwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:04'!
PASSED!

!testRun: #MarsRoverWindowTest #test04WindowForRoverThatMovesForwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:04'!
PASSED!

!testRun: #MarsRoverWindowTest #test05WindowForRoverThatMovesForwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:04'!
PASSED!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatMovesBackwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:04'!
PASSED!

!testRun: #MarsRoverWindowTest #test07CompleteWindowForRoverThatMovesBackwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test08CompleteWindowForRoverThatMovesBackwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test09CompleteWindowForRoverThatMovesBackwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test10WindowForRoverThatRotatesRightHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test11WindowForRoverThatRotatesRightHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test12WindowForRoverThatRotatesRightHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test13WindowForRoverThatRotatesRightHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test14WindowForRoverThatRotatesLeftHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test15WindowForRoverThatRotatesLeftHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test16WindowForRoverThatRotatesLeftHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test17WindowForRoverThatRotatesLeftHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test18WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test19PositionWindowForRoverThatProcessesMultipleCommandsShowsCurrentPosition stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

!testRun: #MarsRoverWindowTest #test20HeadingWindowForRoverThatProcessesMultipleCommandsShowsCurrentHeading stamp: 'IV 6/5/2023 09:23:05'!
PASSED!

Object subclass: #ObservableVariable
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #ObservableVariable category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:23:49'!
Object subclass: #ObservableVariable
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

Object subclass: #ObservableVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #ObservableVariable category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:23:51'!
Object subclass: #ObservableVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

Object subclass: #ObservableVariable
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #ObservableVariable category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:23:55'!
Object subclass: #ObservableVariable
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!ObservableVariable methodsFor: 'no messages' stamp: 'IV 6/5/2023 09:24:23'!
initializeWith: aValue

	value := aValue.! !
!ObservableVariable class methodsFor: 'no messages' stamp: 'IV 6/5/2023 09:24:59'!
with: aValue

	self new initializeWith: aValue.! !
!ObservableVariable methodsFor: 'nil' stamp: 'IV 6/5/2023 09:26:12'!
changeTo: aNewValue

	value := aNewValue.! !

Object subclass: #ObservableVariable
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #ObservableVariable category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:26:28'!
Object subclass: #ObservableVariable
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:26:50'!
addObserverNotification: anObserverNotificationBlock! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:26:51' prior: 50640601!
addObserverNotification: anObserverNotificationBlock

	! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:26:59' prior: 50640606!
addObserverNotification: anObserverNotificationBlock

	! !

Object subclass: #ObservableVariable
	instanceVariableNames: 'value notifications'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #ObservableVariable category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:27:09'!
Object subclass: #ObservableVariable
	instanceVariableNames: 'value notifications'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:27:26' prior: 50640611!
addObserverNotification: anObserverNotificationBlock

	notifications add: anObserverNotificationBlock ! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:27:27' prior: 50640630!
addObserverNotification: anObserverNotificationBlock

	notifications add: anObserverNotificationBlock! !
!ObservableVariable methodsFor: 'initialization' stamp: 'IV 6/5/2023 09:27:43' prior: 50640575!
initializeWith: aValue

	value := aValue.
	notifications := Set new.! !
!ObservableVariable methodsFor: 'initialization' stamp: 'IV 6/5/2023 09:27:54' prior: 50640644!
initializeWith: aValue

	value := aValue.
	notifications := OrderedCollection new.! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:28:04' prior: 50640637!
addObserverNotification: anObserverNotificationBlock

	notifications add: anObserverNotificationBlock.! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:28:53' prior: 50640583!
changeTo: aNewValue

	value := aNewValue.! !

!classDefinition: #ObservableVariable category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:29:15'!
Object subclass: #ObservableVariable
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:29:15' prior: 50640650!
initializeWith: aValue

	value := aValue.
	observers := OrderedCollection new.! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:29:15' prior: 50640656!
addObserverNotification: anObserverNotificationBlock

	observers add: anObserverNotificationBlock.! !

----SNAPSHOT----(5 June 2023 09:29:22) CuisUniversity-5832.image priorSource: 9824918!
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:29:29'!
addObserver: anObserverNotificationBlock

	observers add: anObserverNotificationBlock.! !

!methodRemoval: ObservableVariable #addObserverNotification: stamp: 'IV 6/5/2023 09:29:29'!
addObserverNotification: anObserverNotificationBlock

	observers add: anObserverNotificationBlock.!
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:29:38' prior: 50640691!
addObserver: anObserver

	observers add: anObserver.! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:29:44' prior: 50640663!
changeTo: aNewValue

	value := aNewValue.
	! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:29:51' prior: 50640708!
changeTo: aNewValue

	value := aNewValue.
	! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:29:57' prior: 50640713!
changeTo: aNewValue

	value := aNewValue.
	self notifyObservers.! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:30:11'!
notifyObservers
	! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:30:12' prior: 50640723!
notifyObservers
	
	! !
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:30:16' prior: 50640727!
notifyObservers
	
	self subclassResponsibility.! !
!ObservableVariable methodsFor: 'value' stamp: 'IV 6/5/2023 09:32:49'!
doesNotUnderstand! !
!ObservableVariable methodsFor: 'value' stamp: 'IV 6/5/2023 09:32:54' overrides: 50337880!
doesNotUnderstand: aMessage! !

!methodRemoval: ObservableVariable #doesNotUnderstand stamp: 'IV 6/5/2023 09:32:55'!
doesNotUnderstand!
!ObservableVariable methodsFor: 'value' stamp: 'IV 6/5/2023 09:32:58' prior: 50640739 overrides: 50337880!
doesNotUnderstand: aMessage

	! !
!ObservableVariable methodsFor: 'value' stamp: 'IV 6/5/2023 09:33:12' prior: 50640747 overrides: 50337880!
doesNotUnderstand: aMessage

	^ aMessage sendTo: value.! !
!ObservableVariable methodsFor: 'value' stamp: 'IV 6/5/2023 09:34:00' overrides: 16902254!
value

	^value.! !

ObservableVariable subclass: #ObservablePosition
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

ObservableVariable subclass: #ObservablePosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #ObservablePosition category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:35:02'!
ObservableVariable subclass: #ObservablePosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

ObservableVariable subclass: #ObservableHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classDefinition: #ObservableHeading category: 'MarsRover2-Ejercicio' stamp: 'IV 6/5/2023 09:35:35'!
ObservableVariable subclass: #ObservableHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!
!ObservablePosition methodsFor: 'observers' stamp: 'IV 6/5/2023 09:35:49' overrides: 50640731!
notifyObservers
	
	self subclassResponsibility.! !
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 09:35:49' overrides: 50640731!
notifyObservers
	
	self subclassResponsibility.! !

!methodRemoval: ObservableVariable #notifyObservers stamp: 'IV 6/5/2023 09:35:49'!
notifyObservers
	
	self subclassResponsibility.!
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:35:49'!
notifyObservers

	self subclassResponsibility! !
!ObservablePosition methodsFor: 'observers' stamp: 'IV 6/5/2023 09:36:51' prior: 50640792 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		anObserver notifyPositionChangedTo: 	value.
	]! !
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 09:37:39' prior: 50640797 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		anObserver .	
	]! !
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 09:38:27' prior: 50640818 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		anObserver notifyHeadingChanged.
	]! !
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 09:39:05' prior: 50640824 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		value notifyTo: anObserver.
	]! !
!MarsRover methodsFor: 'initialization' stamp: 'IV 6/5/2023 09:41:48' prior: 50638786!
initializeAt: aPosition heading: aHeadingType

	position := ObservablePosition with: aPosition.
	head := aHeadingType for: self.
	
	positionObservers := OrderedCollection new.
	headingObservers := OrderedCollection new.! !
!MarsRover methodsFor: 'initialization' stamp: 'IV 6/5/2023 09:42:02' prior: 50640837!
initializeAt: aPosition heading: aHeadingType

	position := ObservablePosition with: aPosition.
	head := ObservableHeading with: (aHeadingType for: self).
	
	positionObservers := OrderedCollection new.
	headingObservers := OrderedCollection new.! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:42:35' prior: 50638814!
moveBackward
	
	head moveBackward.
! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:42:39' prior: 50638823!
moveForward
	
	head moveForward.
! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/5/2023 09:42:46' prior: 50638856!
rotateLeft
	
	head rotateLeft.

	
	 
	
	
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/5/2023 09:42:49' prior: 50638861!
rotateRight
	
	head rotateRight.
! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:43:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:43:17'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:43:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:43:34'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:44:46'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:44:51'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:45:01'!
ERROR!
!ObservablePosition methodsFor: 'proxy' stamp: 'IV 6/5/2023 09:45:21' overrides: 50640752!
doesNotUnderstand: aMessage

	^ aMessage sendTo: value.! !
!ObservableHeading methodsFor: 'proxy' stamp: 'IV 6/5/2023 09:45:21' overrides: 50640752!
doesNotUnderstand: aMessage

	^ aMessage sendTo: value.! !

!methodRemoval: ObservableVariable #doesNotUnderstand: stamp: 'IV 6/5/2023 09:45:21'!
doesNotUnderstand: aMessage

	^ aMessage sendTo: value.!
!ObservableVariable methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 09:45:21' overrides: 50337880!
doesNotUnderstand: aMessage

	self subclassResponsibility! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:45:25'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:25'!
ERROR!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:26'!
ERROR!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:45:26'!
ERROR!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:45:26'!
ERROR!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:45:26'!
ERROR!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:45:26'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:45:28'!
ERROR!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:48:40'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:48:40'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:48:42'!
ERROR!
!ObservableVariable class methodsFor: 'instance creation' stamp: 'IV 6/5/2023 09:50:12' prior: 50640579!
with: aValue

	self class new initializeWith: aValue.! !
!ObservableVariable class methodsFor: 'instance creation' stamp: 'IV 6/5/2023 09:51:15' prior: 50641184!
with: aValue

	self new initializeWith: aValue.! !
!ObservableVariable class methodsFor: 'instance creation' stamp: 'IV 6/5/2023 09:51:16' prior: 50641190!
with: aValue

	^self new initializeWith: aValue.! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:51:20'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:51:20'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:51:25'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:53:31' prior: 50638819!
moveEast
	
	position value: position + (1@0)! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:53:51' prior: 50638828!
moveNorth
	
	position value: position + (0@1)! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:53:56' prior: 50638832!
moveSouth
	
	position value: position + (0@-1)! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:54:00' prior: 50638836!
moveWest
	
	position value: position + (-1@0)! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:55:23'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:55:23'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:55:23'!
ERROR!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:55:27'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:56:02' prior: 50641292!
moveEast
	
	position changeTo: position + (1@0)! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:56:05' prior: 50641296!
moveNorth
	
	position changeTo: position + (0@1)! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:56:08' prior: 50641300!
moveSouth
	
	position changeTo: position + (0@-1)! !
!MarsRover methodsFor: 'moving' stamp: 'IV 6/5/2023 09:56:11' prior: 50641305!
moveWest
	
	position changeTo: position + (-1@0)! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:56:14'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:56:14'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:56:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 09:57:17'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 09:57:17'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 09:57:19'!
FAILURE!
!MarsRover methodsFor: 'observers' stamp: 'IV 6/5/2023 10:01:07' prior: 50638888!
attachToHeadingChanges: aMarsRoverObserver

	head add: aMarsRoverObserver! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/5/2023 10:01:12' prior: 50641605!
attachToHeadingChanges: aMarsRoverObserver

	head addObserver: aMarsRoverObserver! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/5/2023 10:01:18' prior: 50638893!
attachToPositionChanges: aMarsRoverObserver

	position add: aMarsRoverObserver! !
!MarsRover methodsFor: 'observers' stamp: 'IV 6/5/2023 10:01:23' prior: 50641616!
attachToPositionChanges: aMarsRoverObserver

	position addObserver: aMarsRoverObserver! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 10:01:33'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 10:01:33'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'IV 6/5/2023 10:02:10' prior: 50638840!
headEast
	
	head changeTo: (MarsRoverHeadingEast for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/5/2023 10:02:21' prior: 50638844!
headNorth
	
	head changeTo: (MarsRoverHeadingNorth for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/5/2023 10:02:29' prior: 50638848!
headSouth
	
	head changeTo: (MarsRoverHeadingSouth for: self).! !
!MarsRover methodsFor: 'heading' stamp: 'IV 6/5/2023 10:02:38' prior: 50638852!
headWest
	
	head changeTo: (MarsRoverHeadingWest for: self).! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/5/2023 10:02:43'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/5/2023 10:02:43'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/5/2023 10:02:43'!
FAILURE!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 10:02:50'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/5/2023 10:02:53'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/5/2023 10:02:53'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/5/2023 10:02:53'!
FAILURE!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/5/2023 10:02:57'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'IV 6/5/2023 10:05:03' prior: 50638866!
isAt: aPosition heading: aHeadingType

	^position value = aPosition and: [ head isHeading: aHeadingType ]! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/5/2023 10:05:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 10:05:18'!
PASSED!

!testRun: #MarsRoverWindowTest #test01WindowForRoverThatHasntProcessedCommandsShowsNoInformation stamp: 'IV 6/5/2023 10:05:20'!
PASSED!

!testRun: #MarsRoverWindowTest #test02WindowForRoverThatMovesForwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:20'!
PASSED!

!testRun: #MarsRoverWindowTest #test03WindowForRoverThatMovesForwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:20'!
PASSED!

!testRun: #MarsRoverWindowTest #test04WindowForRoverThatMovesForwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:20'!
PASSED!

!testRun: #MarsRoverWindowTest #test05WindowForRoverThatMovesForwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:20'!
PASSED!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatMovesBackwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:20'!
PASSED!

!testRun: #MarsRoverWindowTest #test07CompleteWindowForRoverThatMovesBackwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test08CompleteWindowForRoverThatMovesBackwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test09CompleteWindowForRoverThatMovesBackwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test10WindowForRoverThatRotatesRightHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test11WindowForRoverThatRotatesRightHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test12WindowForRoverThatRotatesRightHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test13WindowForRoverThatRotatesRightHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test14WindowForRoverThatRotatesLeftHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test15WindowForRoverThatRotatesLeftHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test16WindowForRoverThatRotatesLeftHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test17WindowForRoverThatRotatesLeftHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test18WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test19PositionWindowForRoverThatProcessesMultipleCommandsShowsCurrentPosition stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test20HeadingWindowForRoverThatProcessesMultipleCommandsShowsCurrentHeading stamp: 'IV 6/5/2023 10:05:21'!
PASSED!

----SNAPSHOT----(5 June 2023 10:05:29) CuisUniversity-5832.image priorSource: 9889189!
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 10:08:05' prior: 50640831 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		value accept: anObserver.
	]! !
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 10:08:31' prior: 50642176 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		value accept: anObserver .
	]! !
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 10:08:48' prior: 50642182 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		value accept: anObserver.
	]! !
!MarsRoverHeading methodsFor: 'nil' stamp: 'IV 6/5/2023 10:09:27'!
accept: aVisitor

	self subclassResponsibility ! !
!MarsRoverHeadingEast methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:09:55' overrides: 50642194!
accept: aVisitor

	self subclassResponsibility ! !
!MarsRoverHeadingNorth methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:09:55' overrides: 50642194!
accept: aVisitor

	self subclassResponsibility ! !
!MarsRoverHeadingSouth methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:09:55' overrides: 50642194!
accept: aVisitor

	self subclassResponsibility ! !
!MarsRoverHeadingWest methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:09:55' overrides: 50642194!
accept: aVisitor

	self subclassResponsibility ! !

!methodRemoval: MarsRoverHeading #accept: stamp: 'IV 6/5/2023 10:09:55'!
accept: aVisitor

	self subclassResponsibility !
!MarsRoverHeading methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 10:09:55'!
accept: aVisitor

	self subclassResponsibility! !
!MarsRoverHeadingEast methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:10:16' prior: 50642199 overrides: 50642223!
accept: aVisitor

	aVisitor visitMarsRoverHeadingEast: self.! !
!MarsRoverHeadingNorth methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:10:33' prior: 50642204 overrides: 50642223!
accept: aVisitor

	aVisitor visitMarsRoverHeadingNorth: self.! !
!MarsRoverHeadingSouth methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:10:42' prior: 50642209 overrides: 50642223!
accept: aVisitor

	aVisitor visitMarsRoverHeadingSouth: self.! !
!MarsRoverHeadingWest methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:10:51' prior: 50642214 overrides: 50642223!
accept: aVisitor

	aVisitor visitMarsRoverHeadingWest: self.! !
!ObservableVariable methodsFor: 'nil' stamp: 'IV 6/5/2023 10:11:59'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	! !
!ObservableHeading methodsFor: 'as yet unclassified' stamp: 'IV 6/5/2023 10:12:40' overrides: 50642252!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	! !

!methodRemoval: ObservableVariable #visitMarsRoverHeadingEast: stamp: 'IV 6/5/2023 10:12:40'!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	!
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:12:57' prior: 50642257!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:13:36' prior: 50642267!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	observers do: [:anObserver |
		anObserver notifyPositionChangedTo: 	value.
	]

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:13:48' prior: 50642272!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	observers do: [:anObserver |
		anObserver notifyNowHeadingEast 
	]

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:13:49' prior: 50642279!
visitMarsRoverHeadingEast: aMarsRoverHeadingEast

	observers do: [:anObserver |
		anObserver notifyNowHeadingEast.
	]

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:13:54'!
visitMarsRoverHeadingWest: aMarsRoverHeadingEast

	observers do: [:anObserver |
		anObserver notifyNowHeadingEast.
	]

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:13:57' prior: 50642293!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest

	observers do: [:anObserver |
		anObserver notifyNowHeadingEast.
	]

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:14:01' prior: 50642300!
visitMarsRoverHeadingWest: aMarsRoverHeadingWest

	observers do: [:anObserver |
		anObserver notifyNowHeadingWest.
	]

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:14:12'!
visitMarsRoverHeadingNorth: aMarsRoverHeadingNorth

	observers do: [:anObserver |
		anObserver notifyNowHeadingNorth.
	]

	! !
!ObservableHeading methodsFor: 'visiting' stamp: 'IV 6/5/2023 10:14:25'!
visitMarsRoverHeadingSouth: aMarsRoverHeadingSouth

	observers do: [:anObserver |
		anObserver notifyNowHeadingSouth.
	]

	! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 10:14:31'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 10:14:32'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 10:14:32'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 10:14:32'!
ERROR!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:14:36'!
ERROR!
!ObservableHeading methodsFor: 'observers' stamp: 'IV 6/5/2023 10:15:07' prior: 50642189 overrides: 50640806!
notifyObservers
	
	observers do: [:anObserver |
		value accept: self.
	]! !

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 10:15:16'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:18'!
PASSED!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 10:15:19'!
PASSED!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 10:15:19'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 10:15:19'!
PASSED!

!testRun: #MarsRoverWindowTest #test01WindowForRoverThatHasntProcessedCommandsShowsNoInformation stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test02WindowForRoverThatMovesForwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test03WindowForRoverThatMovesForwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test04WindowForRoverThatMovesForwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test05WindowForRoverThatMovesForwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatMovesBackwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test07CompleteWindowForRoverThatMovesBackwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test08CompleteWindowForRoverThatMovesBackwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test09CompleteWindowForRoverThatMovesBackwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test10WindowForRoverThatRotatesRightHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test11WindowForRoverThatRotatesRightHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test12WindowForRoverThatRotatesRightHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test13WindowForRoverThatRotatesRightHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test14WindowForRoverThatRotatesLeftHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test15WindowForRoverThatRotatesLeftHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test16WindowForRoverThatRotatesLeftHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test17WindowForRoverThatRotatesLeftHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test18WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test19PositionWindowForRoverThatProcessesMultipleCommandsShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverWindowTest #test20HeadingWindowForRoverThatProcessesMultipleCommandsShowsCurrentHeading stamp: 'IV 6/5/2023 10:15:21'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/5/2023 10:15:24'!
PASSED!

!testRun: #MarsRoverLoggersTest #test01LogForRoverThatHasntProcessedCommandsIsEmpty stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test02LogForRoverThatMovesForwardHeadingNorthLogsNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test03LogForRoverThatMovesForwardHeadingSouthLogsNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test04LogForRoverThatMovesForwardHeadingWestLogsNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test05LogForRoverThatMovesForwardHeadingEastLogsNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test06LogForRoverThatMovesBackwardHeadingNorthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test07LogForRoverThatMovesBackwardHeadingSouthHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test08LogForRoverThatMovesBackwardHeadingWestHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test09LogForRoverThatMovesBackwardHeadingEastHasLineWithNewPosition stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test10LogForRoverThatRotatesRightHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test11LogForRoverThatRotatesRightHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test12LogForRoverThatRotatesRightHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test13LogForRoverThatRotatesRightHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test14LogForRoverThatRotatesLeftHeadingNorthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test15LogForRoverThatRotatesLeftHeadingSouthHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test16LogForRoverThatRotatesLeftHeadingWestHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test17LogForRoverThatRotatesLeftHeadingEastHasLineWithNewHeading stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test18LogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsAndHeadings stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test19PositionLogForRoverThatProcessesMultipleCommandsHasLinesWithPositionsOnly stamp: 'IV 6/5/2023 10:15:27'!
PASSED!

!testRun: #MarsRoverLoggersTest #test20HeadingLogForRoverThatProcessesMultipleCommandsHasLinesWithHeadingsOnly stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test01WindowForRoverThatHasntProcessedCommandsShowsNoInformation stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test02WindowForRoverThatMovesForwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test03WindowForRoverThatMovesForwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test04WindowForRoverThatMovesForwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test05WindowForRoverThatMovesForwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test06CompleteWindowForRoverThatMovesBackwardHeadingNorthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test07CompleteWindowForRoverThatMovesBackwardHeadingSouthShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test08CompleteWindowForRoverThatMovesBackwardHeadingWestShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test09CompleteWindowForRoverThatMovesBackwardHeadingEastShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test10WindowForRoverThatRotatesRightHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test11WindowForRoverThatRotatesRightHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test12WindowForRoverThatRotatesRightHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test13WindowForRoverThatRotatesRightHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test14WindowForRoverThatRotatesLeftHeadingNorthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test15WindowForRoverThatRotatesLeftHeadingSouthShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test16WindowForRoverThatRotatesLeftHeadingWestShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test17WindowForRoverThatRotatesLeftHeadingEastShowsCurrentHeadingDirection stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test18WindowForRoverThatProcessesMultipleCommandsShowsCurrentPositionAndHeading stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test19PositionWindowForRoverThatProcessesMultipleCommandsShowsCurrentPosition stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

!testRun: #MarsRoverWindowTest #test20HeadingWindowForRoverThatProcessesMultipleCommandsShowsCurrentHeading stamp: 'IV 6/5/2023 10:15:28'!
PASSED!

----SNAPSHOT----(5 June 2023 10:16:08) CuisUniversity-5832.image priorSource: 9936668!

----STARTUP---- (8 June 2023 11:40:11) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!


!classRemoval: #MarsRoverWindowTest stamp: 'IV 6/8/2023 11:40:51'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: 'marsRoverHeadingNorth marsRoverHeadingWest marsRoverHeadingEast marsRoverHeadingSouth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #MarsRoverTest stamp: 'IV 6/8/2023 11:40:52'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #MarsRoverLoggersTest stamp: 'IV 6/8/2023 11:40:52'!
TestCase subclass: #MarsRoverLoggersTest
	instanceVariableNames: 'marsRoverHeadingNorth marsRoverHeadingSouth marsRoverHeadingWest marsRoverHeadingEast'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #ObservablePosition stamp: 'IV 6/8/2023 11:40:52'!
ObservableVariable subclass: #ObservablePosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #ObservableHeading stamp: 'IV 6/8/2023 11:40:52'!
ObservableVariable subclass: #ObservableHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #ObservableVariable stamp: 'IV 6/8/2023 11:40:52'!
Object subclass: #ObservableVariable
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverWindow stamp: 'IV 6/8/2023 11:40:52'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverLogger stamp: 'IV 6/8/2023 11:40:52'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverObserver stamp: 'IV 6/8/2023 11:40:53'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingWest stamp: 'IV 6/8/2023 11:40:53'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingSouth stamp: 'IV 6/8/2023 11:40:53'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingNorth stamp: 'IV 6/8/2023 11:40:53'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingEast stamp: 'IV 6/8/2023 11:40:53'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeading stamp: 'IV 6/8/2023 11:40:53'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRover stamp: 'IV 6/8/2023 11:40:53'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers positionObservers headingObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

----End fileIn of C:\Users\nacho\Documents\GitHub\inge1-2023\09-TusLibros\TusLibros-Ejercicio.st----!

----STARTUP---- (8 June 2023 19:47:59) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!


!classRemoval: #MarsRoverWindowTest stamp: 'IV 6/8/2023 19:48:21'!
TestCase subclass: #MarsRoverWindowTest
	instanceVariableNames: 'marsRoverHeadingNorth marsRoverHeadingWest marsRoverHeadingEast marsRoverHeadingSouth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #MarsRoverTest stamp: 'IV 6/8/2023 19:48:21'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #MarsRoverLoggersTest stamp: 'IV 6/8/2023 19:48:22'!
TestCase subclass: #MarsRoverLoggersTest
	instanceVariableNames: 'marsRoverHeadingNorth marsRoverHeadingSouth marsRoverHeadingWest marsRoverHeadingEast'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Tests'!

!classRemoval: #ObservablePosition stamp: 'IV 6/8/2023 19:48:22'!
ObservableVariable subclass: #ObservablePosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #ObservableHeading stamp: 'IV 6/8/2023 19:48:22'!
ObservableVariable subclass: #ObservableHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #ObservableVariable stamp: 'IV 6/8/2023 19:48:22'!
Object subclass: #ObservableVariable
	instanceVariableNames: 'value observers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverWindow stamp: 'IV 6/8/2023 19:48:22'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'currentPosition currentHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverLogger stamp: 'IV 6/8/2023 19:48:22'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'lines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverObserver stamp: 'IV 6/8/2023 19:48:22'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingWest stamp: 'IV 6/8/2023 19:48:23'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingSouth stamp: 'IV 6/8/2023 19:48:23'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingNorth stamp: 'IV 6/8/2023 19:48:23'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeadingEast stamp: 'IV 6/8/2023 19:48:23'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRoverHeading stamp: 'IV 6/8/2023 19:48:23'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

!classRemoval: #MarsRover stamp: 'IV 6/8/2023 19:48:23'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger observers positionObservers headingObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover2-Ejercicio'!

----End fileIn of C:\Users\nacho\Downloads\Iteracion1\TusLibros-15.st----!

!classRemoval: #Cart stamp: 'IV 6/8/2023 19:55:32'!
Object subclass: #Cart
	instanceVariableNames: 'catalog books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'IV 6/8/2023 19:55:32'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\nacho\Downloads\Iteracion1\TusLibros-18.st----!

Object subclass: #Cashier
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'IV 6/8/2023 19:57:37'!
Object subclass: #Cashier
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #CashierTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'IV 6/8/2023 19:58:35'!
TestCase subclass: #CashierTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'no messages' stamp: 'IV 6/8/2023 19:58:54'!
test01CannotCheckoutEmptyCart

	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 19:59:35' prior: 50643783!
test01CannotCheckoutEmptyCart

	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 19:59:45'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:00:47'!
defaultCatalog
	
	^ Array with: self itemSellByTheStore! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:01:01' prior: 50643788!
test01CannotCheckoutEmptyCart

	| cart |
	cart = self createCart ! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:01:06' prior: 50643801!
test01CannotCheckoutEmptyCart

	| cart |
	
	cart = self createCart ! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:01:28' prior: 50643806!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	 ! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:03:47' prior: 50643811!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	self should: [Cashier checkout: cart] raise: Error withMessageText: Cashier class emptyCartErrorDescription! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:03:51'!
ERROR!
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:04:29'!
itemSellByTheStore
	
	^ 'validBook'! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:04:34'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:04:34'!
ERROR!
!Cashier class methodsFor: 'no messages' stamp: 'IV 6/8/2023 20:05:15'!
emprtyCartErrorDescription

	^'Cannot checkout an empty cart'! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:05:32'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:05:32'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:05:44' prior: 50643817!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	self should: [Cashier checkout: cart] raise: Error withMessageText: Cashier emptyCartErrorDescription! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:05:50' prior: 50643850!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	self should: [Cashier checkout: cart] raise: Error withMessageText: Cashier emprtyCartErrorDescription ! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:05:52'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:06:16' prior: 50643860!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	self should: [cashier checkout: cart] raise: Error withMessageText: Cashier emprtyCartErrorDescription ! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:06:19'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:07:48' prior: 50643873!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emprtyCartErrorDescription ! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:07:51' prior: 50643886!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emprtyCartErrorDescription ! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:07:53'!
ERROR!
!Cashier methodsFor: 'no messages' stamp: 'IV 6/8/2023 20:08:13'!
checkout: aCart! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:08:14' prior: 50643909!
checkout: aCart

	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:08:40' prior: 50643913!
checkout: aCart

	self error: self class emptyCartErrorDescription! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:08:42' prior: 50643917!
checkout: aCart

	self error: self class ! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/8/2023 20:09:03'!
emptyCartErrorDescription

	^'Cannot checkout an empty cart'! !

!methodRemoval: Cashier class #emprtyCartErrorDescription stamp: 'IV 6/8/2023 20:09:03'!
emprtyCartErrorDescription

	^'Cannot checkout an empty cart'!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:09:19' prior: 50643922!
checkout: aCart

	self error: self class emptyCartErrorDescription ! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:09:20'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:09:20'!
ERROR!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:09:27' prior: 50643936!
checkout: aCart

	self error: self class emptyCartErrorDescription.! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:09:28'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:09:28'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:09:56'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:09:56'!
ERROR!
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/8/2023 20:10:19' prior: 50643926!
emptyCartErrorDescription

	^'Cannot checkout an empty cart'! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:10:21'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:10:21'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:10:42' prior: 50643896!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart = self createCart.
	
	cashier = Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription ! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:10:45'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:10:54' prior: 50643975!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart := self createCart.
	
	cashier := Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription ! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:10:55'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:10:55'!
PASSED!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:10:59' prior: 50643988!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart := self createCart.
	
	cashier := Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:12:11' prior: 50643947!
checkout: aCart

	self error: self class emptyCartErrorDescription.
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:12:17' prior: 50644015!
checkout: aCart

	 self error: self class emptyCartErrorDescription.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:12:55' prior: 50644021!
checkout: aCart

	aCart isEmpty ifTrue: [self error: self class emptyCartErrorDescription].! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:12:59' prior: 50644027!
checkout: aCart

	aCart isEmpty ifTrue: [self error: self class emptyCartErrorDescription].
	
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:13:02'!
PASSED!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:13:27'!
assertCartIsNotEmpty: aCart

	^ aCart isEmpty ifTrue: [self error: self class emptyCartErrorDescription]! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:13:27' prior: 50644033!
checkout: aCart

	self assertCartIsNotEmpty: aCart.
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:13:30' prior: 50644049!
checkout: aCart

	self assertCartIsNotEmpty: aCart.
	
	
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:13:33'!
PASSED!

Object subclass: #CreditCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'IV 6/8/2023 20:15:30'!
Object subclass: #CreditCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'no messages' stamp: 'IV 6/8/2023 20:16:04'!
initializeWith: aNumber expiringAt: aDate

	! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'IV 6/8/2023 20:17:39'!
Object subclass: #CreditCard
	instanceVariableNames: 'number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'IV 6/8/2023 20:17:41'!
Object subclass: #CreditCard
	instanceVariableNames: 'number expiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:17:38' prior: 50644072!
initializeWith: aNumber expiringAt: aDate

	number := aNumber.
	expiration := aDate.! !
!CreditCard class methodsFor: 'no messages' stamp: 'IV 6/8/2023 20:18:10'!
with: aNumber expiringAt: anExpirationDate

	! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:18:27' prior: 50644097!
with: aCardNumber expiringAt: anExpirationDate

	self new initializeWith: aCardNumber expiringAt: anExpirationDate ! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:18:28' prior: 50644102!
with: aCardNumber expiringAt: anExpirationDate

	self new initializeWith: aCardNumber expiringAt: anExpirationDate.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 20:18:40' prior: 50644091!
initializeWith: aCardNumber expiringAt: aDate

	number := aCardNumber.
	expiration := aDate.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 20:18:47' prior: 50644116!
initializeWith: aCardNumber expiringAt: anExpirationDate

	number := aCardNumber.
	expiration := anExpirationDate.! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:19:02'!
createCreditCard

	! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:19:16' prior: 50644128!
createCreditCard

	^ CreditCard with: 1234123412341234! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:19:28' prior: 50644132!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234'! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:20:51' prior: 50644137!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234' expiringAt: (August / 18 / 2026)! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:20:52' prior: 50644142!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234' expiringAt: (August / 18 / 2026).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:21:52'!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier |
	
	cart := self createCart.
	
	cashier := Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:22:23' prior: 50644154!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier |
	
	cart := self createCart.
	cashier := Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:22:29' prior: 50644004!
test01CannotCheckoutEmptyCart

	| cart cashier |
	
	cart := self createCart.
	cashier := Cashier new.
	
	self should: [cashier checkout: cart] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:22:44' prior: 50644165!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier |
	
	cart := self createCart.
	cashier := Cashier new.
	
	self assert: [cashier checkout: cart] equals: 10.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:22:58' prior: 50644054!
checkout: aCart

	self assertCartIsNotEmpty: aCart.
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:23:51' prior: 50644195!
checkout: aCart

	self assertCartIsNotEmpty: aCart.
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:24:03'!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	! !

!methodRemoval: Cashier #checkout: stamp: 'IV 6/8/2023 20:24:07'!
checkout: aCart

	self assertCartIsNotEmpty: aCart.
	
	!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:24:36' prior: 50644176!
test01CannotCheckoutEmptyCart

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self should: [cashier checkout: cart with: creditCard] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription.! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:24:39'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:24:39'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:24:39'!
FAILURE!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:24:39'!
FAILURE!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:24:45'!
PASSED!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:25:15' prior: 50644186!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: [ cashier checkout: cart with: creditCard] equals: 10.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:25:19' prior: 50644242!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: [ cashier checkout: cart with: creditCard ] equals: 10.! !

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:25:21'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:25:34' prior: 50644253!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: [ cashier checkout: cart with: creditCard ] equals: [10].! !

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:25:35'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:25:39' prior: 50644267!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: [ cashier checkout: cart with: creditCard ] equals: 10.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:26:01' prior: 50644281!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: [ ^cashier checkout: cart with: creditCard ] equals: 10.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:26:03' prior: 50644292!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: [ cashier checkout: cart with: creditCard ] equals: 10.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:26:14' prior: 50644205!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	
	
	! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:27:17' prior: 50644303!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:27:51' prior: 50644320!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:29:04' prior: 50643829!
itemSellByTheStore
	
	^ 'validBook' @ 10! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:29:31' prior: 50644331!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 'validbook'@10.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:29:32'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:29:41' prior: 50644346!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: ('validbook'@10).
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:29:43'!
ERROR!
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:30:14' prior: 50644342!
itemSellByTheStore
	
	^ 'validBook'@10! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:30:15'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:30:15'!
ERROR!
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:30:24' prior: 50644376!
itemSellByTheStore
	
	^ 10@'validBook'! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:30:33' prior: 50644361!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:30:34'!
ERROR!
!CashierTest methodsFor: 'support' stamp: 'IV 6/8/2023 20:30:50' prior: 50644387!
itemSellByTheStore
	
	^ 10@'validbook'! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:30:51'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:30:51'!
FAILURE!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:30:51'!
FAILURE!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:31:07' prior: 50644314!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	
	
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:31:12' prior: 50644421!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	^10.
	
	
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:31:13'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:31:13'!
PASSED!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:31:17' prior: 50644427!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	^ 10.
	
	
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:31:18'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:31:18'!
PASSED!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:31:50' prior: 50644440!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	^ 10.
	
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:31:58' prior: 50644453!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	^ 10.
	
	
	! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:32:30'!
test03CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:32:59'!
test03CheckoutOfACartWithMoreThanOneProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !

!methodRemoval: CashierTest #test03CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:32:59'!
test03CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:33:14' prior: 50644475!
test03CheckoutOfACartWithMoreThanOneProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:33:27'!
test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !

!methodRemoval: CashierTest #test03CheckoutOfACartWithMoreThanOneProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:33:27'!
test03CheckoutOfACartWithMoreThanOneProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:33:54' prior: 50644514!
test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !
!Cart methodsFor: 'adding' stamp: 'IV 6/8/2023 20:34:44' prior: 50643631!
add: aQuantity of: anItem

	self assertIsValidQuantity: aQuantity.
	self assertIsValidItem: anItem.

	items add: anItem withOccurrences: aQuantity.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:35:09' prior: 50644547!
test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 5 of: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard).! !

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:35:20'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:35:20'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:35:20'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:35:20'!
PASSED!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:35:39' prior: 50644567!
test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 5 of: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard).! !

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:35:40'!
FAILURE!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:36:17' prior: 50644459!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	^ aCart .
	
	
	! !
!Cashier methodsFor: 'initialization' stamp: 'IV 6/8/2023 20:37:58'!
withCatalog: aCatalog

	! !
!Cashier methodsFor: 'initialization' stamp: 'IV 6/8/2023 20:39:05' prior: 50644619!
withCatalog: aCatalog

	! !

!methodRemoval: Cashier #withCatalog: stamp: 'IV 6/8/2023 20:39:40'!
withCatalog: aCatalog

	!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 20:39:49' prior: 50644613!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	^ aCart totalPrice.
	
	
	! !
!Cart methodsFor: 'queries' stamp: 'IV 6/8/2023 20:40:26'!
totalPrice

	^items inject: 0 into: [:aProduct |
		
	]! !
!Cart methodsFor: 'queries' stamp: 'IV 6/8/2023 20:43:10' prior: 50644636!
totalPrice

	^items inject: 0 into: [:aProduct |
		aProduct first
	]! !

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:47:17'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:47:28'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:47:44'!
ERROR!
!Cart methodsFor: 'queries' stamp: 'IV 6/8/2023 20:48:07' prior: 50644641!
totalPrice

	^items inject: 0 into: [:totalPrice :aProduct |
		aProduct first
	]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'IV 6/8/2023 20:48:09'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:48:15'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:48:15'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:48:15'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:48:22'!
ERROR!
!Cart methodsFor: 'queries' stamp: 'IV 6/8/2023 20:48:49' prior: 50644660!
totalPrice

	^items inject: 0 into: [:totalPrice :aProduct |
		aProduct x.
	]! !
!Cart methodsFor: 'queries' stamp: 'IV 6/8/2023 20:48:50' prior: 50644705!
totalPrice

	^items inject: 0 into: [:totalPrice :aProduct |
		aProduct x
	]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'IV 6/8/2023 20:48:51'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:48:55'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:48:55'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:48:55'!
FAILURE!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:48:55'!
FAILURE!
!Cart methodsFor: 'queries' stamp: 'IV 6/8/2023 20:49:13' prior: 50644710!
totalPrice

	^items inject: 0 into: [:totalPrice :aProduct |
		totalPrice + aProduct x
	]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'IV 6/8/2023 20:49:15'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:49:18'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:49:18'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:49:18'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:49:22'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:49:26'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:49:26'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:49:26'!
PASSED!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:52:51'!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 5 of: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 20:53:29' prior: 50644813!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 5 of: (10@'validbook').
	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August / 18 / 1900.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard).! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 20:54:53' prior: 50644630!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	
	^ aCart totalPrice.
	
	
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 20:55:34' prior: 50644837!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	aCreditCard isExpiredOn: June / 6 / 2023.
	
	^ aCart totalPrice.
	
	
	! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 20:55:50'!
isExpiredOn: aDate

	! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 20:56:06' prior: 50644850!
isExpiredOn: aDate

	^ expiration < aDate.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 20:56:09' prior: 50644854!
isExpiredOn: aDate

	^expiration < aDate.! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 20:56:56'!
checkout: aCart with: aCreditCard on: aDate 

	self assertCartIsNotEmpty: aCart.
	
	aCreditCard isExpiredOn: June / 6 / 2023.
	
	^ aCart totalPrice.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:56:56' prior: 50644824!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 5 of: (10@'validbook').
	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August / 18 / 1900.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard on: June / 6 / 2023).! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:56:56' prior: 50644214!
test01CannotCheckoutEmptyCart

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self should: [cashier checkout: cart with: creditCard on: June / 6 / 2023] raise: Error - MessageNotUnderstood withMessageText: Cashier emptyCartErrorDescription.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:56:56' prior: 50644391!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard on: June / 6 / 2023).! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:56:56' prior: 50644595!
test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 5 of: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard on: June / 6 / 2023).! !

!methodRemoval: Cashier #checkout:with: stamp: 'IV 6/8/2023 20:56:56'!
checkout: aCart with: aCreditCard

	self assertCartIsNotEmpty: aCart.
	
	aCreditCard isExpiredOn: June / 6 / 2023.
	
	^ aCart totalPrice.
	
	
	!
!Cashier methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 20:56:56' prior: 50644863!
checkout: aCart with: aCreditCard on: aDate 

	self assertCartIsNotEmpty: aCart.
	
	aCreditCard isExpiredOn: aDate.
	
	^ aCart totalPrice.
	
	
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 20:57:44' prior: 50644931!
checkout: aCart with: aCreditCard on: aDate 

	self assertCartIsNotEmpty: aCart.
	
	(aCreditCard isExpiredOn: aDate) ifTrue: (self error: self class expiratedCreditCardErrorDescription) 
	
	^ aCart totalPrice.
	
	
	! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/8/2023 20:58:03'!
expiratedCreditCardErrorDescription

	^'Cannot checkout with an expirated credit card'! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 20:58:13' prior: 50644939!
checkout: aCart with: aCreditCard on: aDate 

	self assertCartIsNotEmpty: aCart.
	
	(aCreditCard isExpiredOn: aDate) ifTrue: (self error: self class expiratedCreditCardErrorDescription) 
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 20:58:17' prior: 50644955!
checkout: aCart with: aCreditCard on: aDate 

	self assertCartIsNotEmpty: aCart.
	
	(aCreditCard isExpiredOn: aDate) ifTrue: (self error: self class expiratedCreditCardErrorDescription).
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 20:58:46'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:58:54'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:58:54'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 20:58:54'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 20:58:54'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 20:59:19'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:59:20'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 20:59:20'!
ERROR!

card := CreditCard with: '1234 1234 1234 1234' expiringAt: (August / 18 / 2026).!

card!

card!
!CreditCard class methodsFor: 'instance creation' stamp: 'IV 6/8/2023 21:00:43' prior: 50644109!
with: aCardNumber expiringAt: anExpirationDate

	^self new initializeWith: aCardNumber expiringAt: anExpirationDate.! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 21:00:44'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:00:44'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 21:00:44'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:00:44'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 21:00:53'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:00:54'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:00:54'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:01:12'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:01:12'!
ERROR!

a := August / 10 / 2020.!

b := August / 11 / 2020.!

a > b!

a < b!

a < b!

a := August / 10 / 2020.!

b := August / 11 / 2021.!

a < b!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:04:41'!
ERROR!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/8/2023 21:06:17' prior: 50644965!
checkout: aCart with: aCreditCard on: aDate 

	self assertCartIsNotEmpty: aCart.
	
	(aCreditCard isExpiredOn: aDate) ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 21:06:20'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:06:20'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 21:06:20'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:06:20'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:06:20'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 21:06:29'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:06:30'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 21:06:32'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:06:33'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:06:33'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 21:06:43' prior: 50644871!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.

	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August / 18 / 1900.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard on: June / 6 / 2023).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 21:06:43' prior: 50645096!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August / 18 / 1900.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard on: June / 6 / 2023).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 21:07:53' prior: 50645108!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August / 18 / 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:07:57'!
FAILURE!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:08:06'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 21:08:55' prior: 50645120!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validnbook').
	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August / 18 / 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:08:56'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/8/2023 21:09:01' prior: 50645142!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August / 18 / 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:09:02'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/8/2023 21:09:02'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/8/2023 21:09:02'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/8/2023 21:09:02'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/8/2023 21:09:02'!
PASSED!

----SNAPSHOT----(8 June 2023 21:13:52) CuisUniversity-5832.image priorSource: 9962451!
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 21:18:55' prior: 50644122!
initializeWith: aCardNumber expiringAt: anExpirationDate

	number := aCardNumber.
	expiration := anExpirationDate.
	! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'IV 6/8/2023 21:19:27'!
Object subclass: #CreditCard
	instanceVariableNames: 'number expiration securityCode'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 21:19:42' prior: 50645198!
initializeWith: aCardNumber expiringAt: anExpirationDate

	number := aCardNumber.
	expiration := anExpirationDate.
	securityCode := '123'.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/8/2023 21:20:01'!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.
	securityCode := '123'.! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 21:20:01' prior: 50645006!
with: aCardNumber expiringAt: anExpirationDate

	^self new initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: '123'.! !

!methodRemoval: CreditCard #initializeWith:expiringAt: stamp: 'IV 6/8/2023 21:20:01'!
initializeWith: aCardNumber expiringAt: anExpirationDate

	number := aCardNumber.
	expiration := anExpirationDate.
	securityCode := '123'.!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'IV 6/8/2023 21:20:01' prior: 50645219!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.
	securityCode := aSecurityCode.! !

----SNAPSHOT----(8 June 2023 21:20:33) CuisUniversity-5832.image priorSource: 10033394!

----SNAPSHOT----(8 June 2023 21:21:32) CuisUniversity-5832.image priorSource: 10035222!

----STARTUP---- (10 June 2023 18:31:04) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!

!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 18:32:32' prior: 50644885!
test01CannotCheckoutEmptyCart

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self should: [cashier checkout: cart with: creditCard on: June / 6 / 2023] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier emptyCartErrorDescription.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 18:40:48' prior: 50645243!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 18:40:51'!
initializeWith: aCardNumber expiringAt: anExpirationDate

	number := aCardNumber.
	expiration := anExpirationDate.! !

!methodRemoval: CreditCard #initializeWith:expiringAt:withSecurityCode: stamp: 'IV 6/10/2023 18:40:54'!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.!
!CashierTest methodsFor: 'support' stamp: 'IV 6/10/2023 18:41:22' prior: 50644148!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234' expiringAt: (August / 2026).! !

October ofYear: 2020!

October ofYear: 2020!
!CashierTest methodsFor: 'support' stamp: 'IV 6/10/2023 18:42:10' prior: 50645297!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234' expiringAt: (August ofYear: 2026).! !

octubre = October ofYear: 2020.!

octubre := October ofYear: 2020.!

octubre := October ofYear: 2020.!

agosto := August / 18 / 2023.!

agosto > octubre!

agosto > octubre!

agosto > octubre first!

octubre amountOfMonthsPerYear !

octubre amountOfMonthsPerYear!

September amountOfMonthsPerYear!

octubre firstDay > agosto!

octubre firstDay > agosto!

agosto!

octubre firstDay !

octubre firstDay!

octubre firstDate!

octubre firstDate!

octubre firstDate!

octubre firstDate!

October firstDate!

octubre firstDate!

----STARTUP---- (10 June 2023 18:49:11) as C:\Users\nacho\Documents\GitHub\SmallTalkImage\CuisUniversity-5832.image!

!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 18:32:32' prior: 50644885!
test01CannotCheckoutEmptyCart

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self should: [cashier checkout: cart with: creditCard on: June / 6 / 2023] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier emptyCartErrorDescription.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 18:40:48' prior: 50645243!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 18:40:51'!
initializeWith: aCardNumber expiringAt: anExpirationDate

	number := aCardNumber.
	expiration := anExpirationDate.! !

!methodRemoval: CreditCard #initializeWith:expiringAt:withSecurityCode: stamp: 'IV 6/10/2023 18:49:13'!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.!
!CashierTest methodsFor: 'support' stamp: 'IV 6/10/2023 18:41:22' prior: 50644148!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234' expiringAt: (August / 2026).! !
!CashierTest methodsFor: 'support' stamp: 'IV 6/10/2023 18:42:10' prior: 50645366!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234' expiringAt: (August ofYear: 2026).! !

----SNAPSHOT----(10 June 2023 18:49:16) CuisUniversity-5832.image priorSource: 10035311!
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 18:49:20'!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.
! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 18:49:23' prior: 50645351!
initializeWith: aCardNumber expiringAt: anExpirationDate

	number := aCardNumber.
	expiration := anExpirationDate.
! !

!methodRemoval: CreditCard #initializeWith:expiringAt:withSecurityCode: stamp: 'IV 6/10/2023 18:49:25'!
initializeWith: aCardNumber expiringAt: anExpirationDate withSecurityCode: aSecurityCode 

	number := aCardNumber.
	expiration := anExpirationDate.
!

October firstDayOfMonth !

(October ofYear: 2020) firstDay !

(October ofYear: 2020) firstDate !
!FixedGregorianDate methodsFor: 'printing' stamp: 'IV 6/10/2023 18:51:44' prior: 50504531 overrides: 16902975!
printOn: aStream

	self month printOn: aStream.
	aStream space.
	dayNumber printOn: aStream.
	aStream nextPut: $,.
	aStream space.
	self year printOn: aStream! !

October / 2020!

October / 2020!

October / 10 / 2020!

October, 2020!

October, 2020!
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 18:55:54' prior: 50645389!
initializeWith: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
! !

october := October, 2020.!

august18 := August / 18 / 2020.!

august18 < october !

august18 < october firstDay!

october firstDay!

august18 < october firstDate!

august18 > october firstDate!

august18 = october firstDate!
!CreditCard methodsFor: 'testing' stamp: 'IV 6/10/2023 18:57:40' prior: 50644859!
isExpiredOn: aDate

	^expiration firstDate < aDate.! !

----SNAPSHOT----(10 June 2023 18:57:51) CuisUniversity-5832.image priorSource: 10039265!

----SNAPSHOT----(10 June 2023 18:58:45) CuisUniversity-5832.image priorSource: 10041174!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:58:51'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 18:58:51'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 18:58:51'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 18:58:51'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:58:55'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:58:55'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:59:14'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:59:14'!
ERROR!
!CreditCard class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 18:59:25' prior: 50645228!
with: aCardNumber expiringAt: anExpirationDate

	^self new initializeWith: aCardNumber expiringAt: anExpirationDate .! !
!CreditCard class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 18:59:26' prior: 50645470!
with: aCardNumber expiringAt: anExpirationDate

	^self new initializeWith: aCardNumber expiringAt: anExpirationDate.! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:59:29'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 18:59:29'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 18:59:29'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 18:59:29'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:59:33'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 18:59:35'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 18:59:35'!
ERROR!
!CashierTest methodsFor: 'support' stamp: 'IV 6/10/2023 18:59:51' prior: 50645372!
createCreditCard

	^ CreditCard with: '1234 1234 1234 1234' expiringAt: (August, 2026).! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 18:59:53'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 18:59:53'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 18:59:53'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 18:59:53'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 18:59:53'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 18:59:57'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 18:59:58'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:00:00'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:00:00'!
ERROR!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:00:18' prior: 50645161!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := CreditCard with: '1234 1234 1234 1234' expiringAt: August, 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:00:19'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:00:19'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:00:19'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:00:19'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:00:19'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:00:37'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:00:37'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:00:37'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:00:37'!
PASSED!

Object subclass: #MockMerchantProcessor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessor category: 'TusLibros' stamp: 'IV 6/10/2023 19:12:45'!
Object subclass: #MockMerchantProcessor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MockMerchantProcessor class methodsFor: 'no messages' stamp: 'IV 6/10/2023 19:16:11'!
forAnAmountOf: anAmount chargingTo: aCreditCard

	^ self new initializeForAnAmountOf: anAmount chargingTo: aCreditCard.! !
!MockMerchantProcessor methodsFor: 'no messages' stamp: 'IV 6/10/2023 19:16:48'!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard! !
!MockMerchantProcessor methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:16:49' prior: 50645613!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard

	! !

!classDefinition: #MockMerchantProcessor category: 'TusLibros' stamp: 'IV 6/10/2023 19:17:16'!
Object subclass: #MockMerchantProcessor
	instanceVariableNames: 'amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessor category: 'TusLibros' stamp: 'IV 6/10/2023 19:17:17'!
Object subclass: #MockMerchantProcessor
	instanceVariableNames: 'amount creditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MockMerchantProcessor methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:17:15' prior: 50645619!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard

	amount := anAmount.
	creditCard := aCreditCard.! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:17:42'!
process

	! !
!CreditCard methodsFor: 'accessing' stamp: 'IV 6/10/2023 19:18:16'!
expiration

	^expiration! !
!CreditCard methodsFor: 'accessing' stamp: 'IV 6/10/2023 19:18:24'!
number

	^number! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'IV 6/10/2023 19:18:34'!
Object subclass: #CreditCard
	instanceVariableNames: 'number expiration securityCode owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'accessing' stamp: 'IV 6/10/2023 19:18:34'!
owner

	^owner! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:18:57' prior: 50645419!
initializeWith: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
	owner := 'Ignacio Vigilante'.
! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:19:17'!
Of: anOwner initializeWith: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
	owner := 'Ignacio Vigilante'.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:19:17' prior: 50645477!
with: aCardNumber expiringAt: anExpirationDate

	^self new Of: 'Ignacio Vigilante' initializeWith: aCardNumber expiringAt: anExpirationDate.! !

!methodRemoval: CreditCard #initializeWith:expiringAt: stamp: 'IV 6/10/2023 19:19:17'!
initializeWith: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
	owner := 'Ignacio Vigilante'.
!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:19:17' prior: 50645676!
Of: anOwner initializeWith: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
	owner := anOwner.
! !
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:19:42'!
initializeOf: anOwner withNumber: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
	owner := anOwner.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:19:42' prior: 50645685!
with: aCardNumber expiringAt: anExpirationDate

	^self new initializeOf: 'Ignacio Vigilante' withNumber: aCardNumber expiringAt: anExpirationDate.! !

!methodRemoval: CreditCard #Of:initializeWith:expiringAt: stamp: 'IV 6/10/2023 19:19:42'!
Of: anOwner initializeWith: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
	owner := anOwner.
!
!CreditCard methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:19:49' prior: 50645709!
initializeOf: anOwnerName withNumber: aCardNumber expiringAt: anExpirationMonthOfYear

	number := aCardNumber.
	expiration := anExpirationMonthOfYear.
	owner := anOwnerName.
! !
!CreditCard class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 19:20:15'!
of: anOwnerName with: aCardNumber expiringAt: anExpirationDate

	^self new initializeOf: 'Ignacio Vigilante' withNumber: aCardNumber expiringAt: anExpirationDate.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:20:15' prior: 50645508!
createCreditCard

	^ CreditCard of: 'Ignacio Vigilante' with: '1234 1234 1234 1234' expiringAt: (August, 2026).! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:20:15' prior: 50645546!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := CreditCard of: 'Ignacio Vigilante' with: '1234 1234 1234 1234' expiringAt: August, 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !

!methodRemoval: CreditCard class #with:expiringAt: stamp: 'IV 6/10/2023 19:20:15'!
with: aCardNumber expiringAt: anExpirationDate

	^self new initializeOf: 'Ignacio Vigilante' withNumber: aCardNumber expiringAt: anExpirationDate.!
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:20:15' prior: 50645743!
of: anOwnerName with: aCardNumber expiringAt: anExpirationDate

	^self new initializeOf: anOwnerName withNumber: aCardNumber expiringAt: anExpirationDate.! !
!CreditCard class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 19:20:26'!
of: anOwnerName withNumber: aCardNumber expiringAt: anExpirationDate

	^self new initializeOf: anOwnerName withNumber: aCardNumber expiringAt: anExpirationDate.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:20:26' prior: 50645759!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := CreditCard of: 'Ignacio Vigilante' withNumber: '1234 1234 1234 1234' expiringAt: August, 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:20:26' prior: 50645752!
createCreditCard

	^ CreditCard of: 'Ignacio Vigilante' withNumber: '1234 1234 1234 1234' expiringAt: (August, 2026).! !

!methodRemoval: CreditCard class #of:with:expiringAt: stamp: 'IV 6/10/2023 19:20:26'!
of: anOwnerName with: aCardNumber expiringAt: anExpirationDate

	^self new initializeOf: anOwnerName withNumber: aCardNumber expiringAt: anExpirationDate.!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:20:40'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:20:42'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:20:43'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:20:44'!
PASSED!

!classDefinition: #MockMerchantProcessor category: 'TusLibros' stamp: 'IV 6/10/2023 19:22:46'!
Object subclass: #MockMerchantProcessor
	instanceVariableNames: 'amount creditCard date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:22:44' prior: 50645647!
process

	(creditCard expiration firstDate < date)! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:23:01' prior: 50645855!
process

	(creditCard expiration firstDate < date) ifTrue: [ self error: 'a' ].! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:23:31' prior: 50645640!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard

	amount := anAmount.
	creditCard := aCreditCard.
	date := August / 18 / 2020.! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:23:41'!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: aDate 

	amount := anAmount.
	creditCard := aCreditCard.
	date := August / 18 / 2020.! !
!MockMerchantProcessor class methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:23:41' prior: 50645606!
forAnAmountOf: anAmount chargingTo: aCreditCard

	^ self new initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: August / 18 / 2020.! !

!methodRemoval: MockMerchantProcessor #initializeForAnAmountOf:chargingTo: stamp: 'IV 6/10/2023 19:23:41'!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard

	amount := anAmount.
	creditCard := aCreditCard.
	date := August / 18 / 2020.!
!MockMerchantProcessor methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:23:41' prior: 50645873!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: aDate 

	amount := anAmount.
	creditCard := aCreditCard.
	date := aDate.! !
!MockMerchantProcessor class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 19:23:52'!
forAnAmountOf: anAmount chargingTo: aCreditCard on: aDate 

	^ self new initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: August / 18 / 2020.! !

!methodRemoval: MockMerchantProcessor class #forAnAmountOf:chargingTo: stamp: 'IV 6/10/2023 19:23:52'!
forAnAmountOf: anAmount chargingTo: aCreditCard

	^ self new initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: August / 18 / 2020.!
!MockMerchantProcessor class methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:23:52' prior: 50645906!
forAnAmountOf: anAmount chargingTo: aCreditCard on: aDate 

	^ self new initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: aDate.! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:24:24' prior: 50645860!
process

	(creditCard expiration firstDate < date) ifTrue: [ self error: '' ].! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:24:43' prior: 50645931!
process

	(creditCard expiration firstDate < date) ifTrue: [ self error: self class expiredCreditCardErrorDescription ].! !
!MockMerchantProcessor class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 19:25:17'!
expiredCreditCardErrorDescription

	^'EXPIRED_CREDIT_CARD'.! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:25:56' prior: 50645937!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^ self class expiredCreditCardErrorDescription ].! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:25:57' prior: 50645950!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^self class expiredCreditCardErrorDescription ].! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:27:14' prior: 50645957!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:27:46' prior: 50645964!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:27:54' prior: 50645971!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'! !
!MockMerchantProcessor methodsFor: 'initialization' stamp: 'IV 6/10/2023 19:27:55' prior: 50645978!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:35:44' prior: 50645052!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	self assertCartIsNotEmpty: aCart.
	
	result := MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(aCreditCard isExpiredOn: aDate) ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:35:48' prior: 50645993!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(aCreditCard isExpiredOn: aDate) ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:36:21' prior: 50646006!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	result  ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:37:01' prior: 50646019!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	result  ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:37:12' prior: 50646032!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result at: 1)  ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:37:14' prior: 50646045!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result at: 1) ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:37:30'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:37:32'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:37:32'!
ERROR!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:37:52' prior: 50646058!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := (MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate) process.
		
	(result at: 1) ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:37:55'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:37:55'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:37:55'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:37:55'!
FAILURE!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:38:00'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:38:00'!
ERROR!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:38:31' prior: 50646081!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := (MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate) process.
		
	(result at: 1) = '1' ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:38:34'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:38:34'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:38:34'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:38:34'!
FAILURE!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:38:34'!
FAILURE!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:39:10'!
FAILURE!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:41:02' prior: 50646116!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := (MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate) process.
		
	(result at: 1) = $1 ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:41:04'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:41:04'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:41:04'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:41:04'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:41:12' prior: 50646150!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := (MockMerchantProcessor forAnAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate) process.
		
	(result first) = $1 ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:41:13'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:41:13'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:41:13'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:41:13'!
PASSED!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:42:48'!
test05CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := CreditCard of: 'Ignacio Vigilante' withNumber: '1234 1234 1234 1234' expiringAt: August, 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:43:44' prior: 50646205!
test05CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:44:07' prior: 50646222!
test05CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 19:44:25'!
stolenCreditCardErrorDescription

	^'Cannot checkout with an expirated credit card'! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 19:44:36' prior: 50646252!
stolenCreditCardErrorDescription

	^'Cannot checkout because the credit card is stolen'! !
!MockMerchantProcessor class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 19:44:51'!
stolenCreditCardErrorDescription

	^'EXPIRED_CREDIT_CARD'.! !
!MockMerchantProcessor class methodsFor: 'instance creation' stamp: 'IV 6/10/2023 19:44:55' prior: 50646264!
stolenCreditCardErrorDescription

	^'STOLEN_CREDIT_CARD'.! !

MockMerchantProcessor subclass: #MockMerchantProcessorStolenCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessorStolenCard category: 'TusLibros' stamp: 'IV 6/10/2023 19:46:32'!
MockMerchantProcessor subclass: #MockMerchantProcessorStolenCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #MockMerchantProcessorOK
	instanceVariableNames: 'amount creditCard date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessorOK category: 'TusLibros' stamp: 'IV 6/10/2023 19:47:54'!
Object subclass: #MockMerchantProcessorOK
	instanceVariableNames: 'amount creditCard date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #MockMerchantProcessorOK stamp: 'IV 6/10/2023 19:47:59'!
Object subclass: #MockMerchantProcessorOK
	instanceVariableNames: 'amount creditCard date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

MockMerchantProcessor subclass: #MockMerchantProcessorOK
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessorOK category: 'TusLibros' stamp: 'IV 6/10/2023 19:48:09'!
MockMerchantProcessor subclass: #MockMerchantProcessorOK
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MockMerchantProcessorStolenCard methodsFor: 'process' stamp: 'IV 6/10/2023 19:48:17' overrides: 50645986!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !
!MockMerchantProcessorOK methodsFor: 'process' stamp: 'IV 6/10/2023 19:48:17' overrides: 50645986!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !

!methodRemoval: MockMerchantProcessor #process stamp: 'IV 6/10/2023 19:48:17'!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.!
!MockMerchantProcessor methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:48:17'!
process

	self subclassResponsibility! !
!MockMerchantProcessorStolenCard methodsFor: 'process' stamp: 'IV 6/10/2023 19:48:36' prior: 50646322 overrides: 50646344!
process

	^'1|', self class stolenCreditCardErrorDescription! !
!MockMerchantProcessorStolenCard methodsFor: 'process' stamp: 'IV 6/10/2023 19:48:38' prior: 50646350 overrides: 50646344!
process

	^'1|', self class stolenCreditCardErrorDescription.! !

!methodRemoval: MockMerchantProcessor #initializeForAnAmountOf:chargingTo:on: stamp: 'IV 6/10/2023 19:50:20'!
initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: aDate 

	amount := anAmount.
	creditCard := aCreditCard.
	date := aDate.!

!methodRemoval: MockMerchantProcessor class #forAnAmountOf:chargingTo:on: stamp: 'IV 6/10/2023 19:50:29'!
forAnAmountOf: anAmount chargingTo: aCreditCard on: aDate 

	^ self new initializeForAnAmountOf: anAmount chargingTo: aCreditCard on: aDate.!
!MockMerchantProcessorOK methodsFor: 'process' stamp: 'IV 6/10/2023 19:51:57'!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !

!methodRemoval: MockMerchantProcessorOK #process stamp: 'IV 6/10/2023 19:52:00'!
process

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.!
!MockMerchantProcessor methodsFor: 'process' stamp: 'IV 6/10/2023 19:52:04'!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !

!methodRemoval: MockMerchantProcessorOK #processWithAmountOf:chargingTo:on: stamp: 'IV 6/10/2023 19:52:04'!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.!

!methodRemoval: MockMerchantProcessor #process stamp: 'IV 6/10/2023 19:52:07'!
process

	self subclassResponsibility!
!MockMerchantProcessorStolenCard methodsFor: 'process' stamp: 'IV 6/10/2023 19:52:10' overrides: 50646391!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !
!MockMerchantProcessorOK methodsFor: 'process' stamp: 'IV 6/10/2023 19:52:10' overrides: 50646391!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !

!methodRemoval: MockMerchantProcessor #processWithAmountOf:chargingTo:on: stamp: 'IV 6/10/2023 19:52:10'!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(creditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.!
!MockMerchantProcessor methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 19:52:10'!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	self subclassResponsibility! !
!MockMerchantProcessorStolenCard methodsFor: 'process' stamp: 'IV 6/10/2023 19:52:21' prior: 50646414 overrides: 50646441!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	^'1|', self class stolenCreditCardErrorDescription.! !

!methodRemoval: MockMerchantProcessorStolenCard #process stamp: 'IV 6/10/2023 19:52:24'!
process

	^'1|', self class stolenCreditCardErrorDescription.!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'IV 6/10/2023 19:53:00'!
Object subclass: #Cashier
	instanceVariableNames: 'mp'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:52:59' prior: 50646178!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [self error: self class expiratedCreditCardErrorDescription].
	
	^ aCart totalPrice.
	! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 19:53:22'!
with: aMerchantProcessor! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 19:53:23' prior: 50646479!
with: aMerchantProcessor

	! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 19:53:47' prior: 50646483!
with: aMerchantProcessor

	^self new initializeWith: aMerchantProcessor.! !
!Cashier methodsFor: 'assertions' stamp: 'IV 6/10/2023 19:54:04'!
initializeWith: aMerchantProcessor

	mp := aMerchantProcessor! !
!Cashier methodsFor: 'assertions' stamp: 'IV 6/10/2023 19:54:05' prior: 50646492!
initializeWith: aMerchantProcessor

	mp := aMerchantProcessor.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:54:37'!
createCashier

	^ Cashier new! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:54:37' prior: 50644898!
test02CheckoutOfACartWithOneProductReturnsItsPrice

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := self createCashier.
	creditCard := self createCreditCard.
	
	self assert: 10 equals: (cashier checkout: cart with: creditCard on: June / 6 / 2023).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:54:37' prior: 50645330!
test01CannotCheckoutEmptyCart

	| cart cashier creditCard |
	
	cart := self createCart.
	cashier := self createCashier.
	creditCard := self createCreditCard.
	
	self should: [cashier checkout: cart with: creditCard on: June / 6 / 2023] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier emptyCartErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:54:37' prior: 50646237!
test05CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := self createCashier.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:54:37' prior: 50644911!
test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: 5 of: (10@'validbook').
	cashier := self createCashier.
	creditCard := self createCreditCard.
	
	self assert: 50 equals: (cashier checkout: cart with: creditCard on: June / 6 / 2023).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:54:37' prior: 50645801!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := self createCashier.
	creditCard := CreditCard of: 'Ignacio Vigilante' withNumber: '1234 1234 1234 1234' expiringAt: August, 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiratedCreditCardErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:54:53' prior: 50646502!
createCashier

	^ Cashier with: (MockMerchantProcessorOK).! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 19:55:01' prior: 50646577!
createCashier

	^ Cashier with: (MockMerchantProcessorOK new).! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:55:05'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:55:05'!
ERROR!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:55:05'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:55:05'!
ERROR!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 19:55:05'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:55:10'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:55:11'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:55:11'!
ERROR!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:55:20'!
ERROR!
!MockMerchantProcessorOK methodsFor: 'process' stamp: 'IV 6/10/2023 19:55:45' prior: 50646423 overrides: 50646441!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(aCreditCard expiration firstDate < date) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !
!MockMerchantProcessorOK methodsFor: 'process' stamp: 'IV 6/10/2023 19:55:48' prior: 50646619 overrides: 50646441!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	(aCreditCard expiration firstDate < aDate) ifTrue: [ ^'1|', self class expiredCreditCardErrorDescription ].
	
	^'0|OK'.! !

!classDefinition: #MockMerchantProcessor category: 'TusLibros' stamp: 'IV 6/10/2023 19:55:58'!
Object subclass: #MockMerchantProcessor
	instanceVariableNames: 'creditCard date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessor category: 'TusLibros' stamp: 'IV 6/10/2023 19:55:58'!
Object subclass: #MockMerchantProcessor
	instanceVariableNames: 'date'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessor category: 'TusLibros' stamp: 'IV 6/10/2023 19:55:58'!
Object subclass: #MockMerchantProcessor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:56:07'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:56:07'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:56:07'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:56:07'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 19:56:07'!
FAILURE!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 19:56:08'!
FAILURE!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 19:56:11'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 19:56:13'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 19:56:14'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 19:56:15'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 19:56:16'!
FAILURE!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 19:56:16'!
FAILURE!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 19:58:32' prior: 50646466!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		
	].
	
	^ aCart totalPrice.
	! !

a := '1|A'.!

b := 'A'.!

a is: b substringAt: 2.!

a is: b substringAt: 3.!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:00:31' prior: 50646702!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		result is: MockMerchantProcessor class.
	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:01:30' prior: 50646715!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		(result is: MockMerchantProcessor expiredCreditCardErrorDescription substringAt: 3) ifTrue: [
			self error: self class expiratedCreditCardErrorDescription.	
		]
	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:01:32' prior: 50646727!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		(result is: MockMerchantProcessor expiredCreditCardErrorDescription substringAt: 3) ifTrue: [
			self error: self class expiratedCreditCardErrorDescription.	
		]
		
	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:01:53' prior: 50646743!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		(result is: MockMerchantProcessor expiredCreditCardErrorDescription substringAt: 3) ifTrue: [
			self error: self class expiratedCreditCardErrorDescription.	
		].
		(result is: MockMerchantProcessor stolenCreditCardErrorDescription substringAt: 3) ifTrue: [
			self error: self class stolenCreditCardErrorDescription.	
		]		
	].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:01:55'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:01:55'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:01:55'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:01:55'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:01:55'!
FAILURE!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:01:55'!
FAILURE!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:02:07'!
FAILURE!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:02:07'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:02:58' prior: 50646531!
test05CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorStolenCard new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:03:02'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:03:02'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:03:02'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:03:02'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:03:02'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:03:02'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:03:06'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:03:06'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:03:06'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:03:06'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:03:06'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:03:06'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:03:26' prior: 50646759!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		(result is: MockMerchantProcessor expiredCreditCardErrorDescription substringAt: 3) ifTrue: [
			self error: self class expiratedCreditCardErrorDescription.	
		].
		(result is: MockMerchantProcessor stolenCreditCardErrorDescription substringAt: 3) ifTrue: [
			self error: self class stolenCreditCardErrorDescription.	
		]
	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:05:57'!
ifErrorOf: anErrorResponse is: aForeignErrorDescription throw: anErrorDescription

	(anErrorResponse is: aForeignErrorDescription substringAt: 3) ifTrue: [
		self error: anErrorDescription.	
	].



! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:06:36' prior: 50646864!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		self ifErrorOf: result is: MockMerchantProcessor expiredCreditCardErrorDescription throw: self class expiredCreditCardErrorDescription.
		(result is: MockMerchantProcessor stolenCreditCardErrorDescription substringAt: 3) ifTrue: [
			self error: self class stolenCreditCardErrorDescription.	
		]
	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:06:59' prior: 50646893!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		self ifErrorOf: result is: MockMerchantProcessor expiredCreditCardErrorDescription throw: self class expiredCreditCardErrorDescription.
		self ifErrorOf: result is: MockMerchantProcessor stolenCreditCardErrorDescription throw: self class stolenCreditCardErrorDescription.

	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:07:00' prior: 50646913!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		self ifErrorOf: result is: MockMerchantProcessor expiredCreditCardErrorDescription throw: self class expiredCreditCardErrorDescription.
		self ifErrorOf: result is: MockMerchantProcessor stolenCreditCardErrorDescription throw: self class stolenCreditCardErrorDescription.
	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:07:22'!
parseErrorResponse: result

	self ifErrorOf: result is: MockMerchantProcessor expiredCreditCardErrorDescription throw: self class expiredCreditCardErrorDescription.
		self ifErrorOf: result is: MockMerchantProcessor stolenCreditCardErrorDescription throw: self class stolenCreditCardErrorDescription! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:07:22' prior: 50646932!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [
		self parseErrorResponse: result.
	].
	
	^ aCart totalPrice.
	! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:07:31' prior: 50646963!
checkout: aCart with: aCreditCard on: aDate 

	| result |
	
	self assertCartIsNotEmpty: aCart.
	
	result := mp processWithAmountOf: aCart totalPrice chargingTo: aCreditCard on: aDate.
		
	(result first) = $1 ifTrue: [ self parseErrorResponse: result ].
	
	^ aCart totalPrice.
	! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:07:32'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:07:32'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:07:32'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:07:32'!
ERROR!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:07:32'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:07:38'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:07:39'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:07:40'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:07:40'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:07:40'!
ERROR!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:08:09' prior: 50646951!
parseErrorResponse: result

	self ifErrorOf: result is: MockMerchantProcessor expiredCreditCardErrorDescription throw: self class expiredCreditCardErrorDescription.
	self ifErrorOf: result is: MockMerchantProcessor stolenCreditCardErrorDescription throw: self class stolenCreditCardErrorDescription! !
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:08:11' prior: 50647022!
parseErrorResponse: result

	self ifErrorOf: result is: MockMerchantProcessor expiredCreditCardErrorDescription throw: self class expiredCreditCardErrorDescription.
	self ifErrorOf: result is: MockMerchantProcessor stolenCreditCardErrorDescription throw: self class stolenCreditCardErrorDescription.! !

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:08:25'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:08:25'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:08:29'!
ERROR!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:09:11'!
ERROR!
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 20:10:06'!
expiredCreditCardErrorDescription

	^'Cannot checkout with an expirated credit card'! !

!methodRemoval: Cashier class #expiratedCreditCardErrorDescription stamp: 'IV 6/10/2023 20:10:09'!
expiratedCreditCardErrorDescription

	^'Cannot checkout with an expirated credit card'!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:10:11' prior: 50646560!
test04CannotCheckoutWithExpiredCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := self createCashier.
	creditCard := CreditCard of: 'Ignacio Vigilante' withNumber: '1234 1234 1234 1234' expiringAt: August, 1900.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier expiredCreditCardErrorDescription.! !

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:10:26'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:10:26'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:10:26'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:10:26'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:10:26'!
PASSED!

MockMerchantProcessor subclass: #MockMerchantProcessorInsufficientAmount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MockMerchantProcessorInsufficientAmount category: 'TusLibros' stamp: 'IV 6/10/2023 20:13:35'!
MockMerchantProcessor subclass: #MockMerchantProcessorInsufficientAmount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MockMerchantProcessorInsufficientAmount methodsFor: 'no messages' stamp: 'IV 6/10/2023 20:13:51' overrides: 50646441!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	^'1|', self class insufficientAmountErrorDescription.! !
!MockMerchantProcessor class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 20:14:50'!
insufficientAmountErrorDescription

	^'INSUFFICIENT_'! !
!MockMerchantProcessor class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 20:15:07' prior: 50647128!
insufficientAmountErrorDescription

	^'INSUFFICIENT_FUNDS'! !
!MockMerchantProcessor class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 20:15:33'!
insufficientFundsErrorDescription

	^'INSUFFICIENT_FUNDS'! !
!MockMerchantProcessorInsufficientAmount methodsFor: 'as yet unclassified' stamp: 'IV 6/10/2023 20:15:33' prior: 50647121 overrides: 50646441!
processWithAmountOf: anAmount chargingTo: aCreditCard on: aDate

	^'1|', self class insufficientFundsErrorDescription.! !

!methodRemoval: MockMerchantProcessor class #insufficientAmountErrorDescription stamp: 'IV 6/10/2023 20:15:33'!
insufficientAmountErrorDescription

	^'INSUFFICIENT_FUNDS'!

!classRenamed: #MockMerchantProcessorInsufficientAmount as: #MockMerchantProcessorInsufficientFunds stamp: 'IV 6/10/2023 20:19:16'!
Smalltalk renameClassNamed: #MockMerchantProcessorInsufficientAmount as: #MockMerchantProcessorInsufficientFunds!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:21:12'!
test05CannotCheckoutWithInsufficientFunds

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorStolenCard new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:21:22' prior: 50647165!
test05CannotCheckoutWithInsufficientFunds

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorInsufficientFunds new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !

!testRun: #CashierTest #test05CannotCheckoutWithInsufficientFunds stamp: 'IV 6/10/2023 20:21:24'!
FAILURE!
!Cashier methodsFor: 'checkout' stamp: 'IV 6/10/2023 20:21:43' prior: 50647034!
parseErrorResponse: result

	self ifErrorOf: result is: MockMerchantProcessor expiredCreditCardErrorDescription throw: self class expiredCreditCardErrorDescription.
	self ifErrorOf: result is: MockMerchantProcessor stolenCreditCardErrorDescription throw: self class stolenCreditCardErrorDescription.
	self ifErrorOf: result is: MockMerchantProcessor insufficientFundsErrorDescription throw: self class insufficientFundsErrorDescription.! !
!Cashier class methodsFor: 'error descriptions' stamp: 'IV 6/10/2023 20:21:57'!
insufficientFundsErrorDescription

	^'Cannot checkout because the credit card has insufficient funds'! !
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:22:09'!
test06CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorStolenCard new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !

!methodRemoval: CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:22:09'!
test05CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorStolenCard new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:22:18'!
test06CannotCheckoutWithInsufficientFunds

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorInsufficientFunds new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !

!methodRemoval: CashierTest #test05CannotCheckoutWithInsufficientFunds stamp: 'IV 6/10/2023 20:22:18'!
test05CannotCheckoutWithInsufficientFunds

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorInsufficientFunds new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:22:26'!
test05CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorStolenCard new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.! !

!methodRemoval: CashierTest #test06CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:22:27'!
test06CannotCheckoutWithStolenCard

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorStolenCard new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier stolenCreditCardErrorDescription.!
!CashierTest methodsFor: 'tests' stamp: 'IV 6/10/2023 20:22:29' prior: 50647255!
test06CannotCheckoutWithInsufficientFunds

	| cart cashier creditCard |
	
	cart := self createCart.
	cart add: (10@'validbook').
	cashier := Cashier with: MockMerchantProcessorInsufficientFunds new.
	creditCard := self createCreditCard.
	
	self should: [ cashier checkout: cart with: creditCard on: June / 6 / 2023 ] 
		 raise: Error - MessageNotUnderstood 
		 withMessageText: Cashier insufficientFundsErrorDescription.! !

!testRun: #CashierTest #test06CannotCheckoutWithInsufficientFunds stamp: 'IV 6/10/2023 20:22:31'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:22:31'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:22:31'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:22:31'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:22:31'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:22:31'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithInsufficientFunds stamp: 'IV 6/10/2023 20:22:31'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutEmptyCart stamp: 'IV 6/10/2023 20:22:35'!
PASSED!

!testRun: #CashierTest #test02CheckoutOfACartWithOneProductReturnsItsPrice stamp: 'IV 6/10/2023 20:22:35'!
PASSED!

!testRun: #CashierTest #test03CheckoutOfACartWithMoreThanOneOcurrenciesOfAProductReturnTheSumOfTheirPrices stamp: 'IV 6/10/2023 20:22:35'!
PASSED!

!testRun: #CashierTest #test04CannotCheckoutWithExpiredCard stamp: 'IV 6/10/2023 20:22:35'!
PASSED!

!testRun: #CashierTest #test05CannotCheckoutWithStolenCard stamp: 'IV 6/10/2023 20:22:35'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithInsufficientFunds stamp: 'IV 6/10/2023 20:22:35'!
PASSED!

----SNAPSHOT----(10 June 2023 20:22:38) CuisUniversity-5832.image priorSource: 10041264!

!methodRemoval: CreditCard #isExpiredOn: stamp: 'IV 6/10/2023 20:25:12'!
isExpiredOn: aDate

	^expiration firstDate < aDate.!

----SNAPSHOT----(10 June 2023 20:27:20) CuisUniversity-5832.image priorSource: 10103336!